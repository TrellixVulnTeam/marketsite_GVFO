{"ast":null,"code":"export function pathParent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index <= 0) {\n    return null;\n  }\n\n  return path.slice(0, index);\n}\nexport function pathChild(path, childPath) {\n  var canonicalChildPath = pathPieces(childPath).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  }\n\n  return path + \"/\" + canonicalChildPath;\n}\nexport function pathLastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  }\n\n  return path.slice(index + 1);\n}\nexport function pathPieces(path) {\n  return path.split('/').filter(function ($) {\n    return $.length > 0;\n  });\n}\nexport function pathIsEmpty(path) {\n  return !pathPieces(path).length;\n}\nexport function pathToUrlEncodedString(path) {\n  var pieces = pathPieces(path);\n  var pathString = '';\n\n  for (var i = 0; i < pieces.length; i++) {\n    pathString += \"/\" + encodeURIComponent(String(pieces[i]));\n  }\n\n  return pathString || '/';\n}\nexport var INVALID_PATH_REGEX = /[[\\].#$\\u0000-\\u001F\\u007F]/;\nexport function isValidPath(path) {\n  return typeof path === 'string' && path.length !== 0 && !INVALID_PATH_REGEX.test(path);\n}\nexport var INVALID_KEY_REGEX = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\nexport function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX.test(path);\n}\nexport function toFilePath(path) {\n  var _filePath = path.replace('file://', '');\n\n  if (_filePath.includes('%')) {\n    _filePath = decodeURIComponent(_filePath);\n  }\n\n  return _filePath;\n}","map":{"version":3,"sources":["D:/marketsite/node_modules/@react-native-firebase/app/lib/common/path.js"],"names":["pathParent","path","length","index","lastIndexOf","slice","pathChild","childPath","canonicalChildPath","pathPieces","join","pathLastComponent","split","filter","$","pathIsEmpty","pathToUrlEncodedString","pieces","pathString","i","encodeURIComponent","String","INVALID_PATH_REGEX","isValidPath","test","INVALID_KEY_REGEX","isValidKey","key","toFilePath","_filePath","replace","includes","decodeURIComponent"],"mappings":"AAoBA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,MAAMC,KAAK,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,CAAd;;AACA,MAAID,KAAK,IAAI,CAAb,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAOF,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcF,KAAd,CAAP;AACD;AAKD,OAAO,SAASG,SAAT,CAAmBL,IAAnB,EAAyBM,SAAzB,EAAoC;AACzC,MAAMC,kBAAkB,GAAGC,UAAU,CAACF,SAAD,CAAV,CAAsBG,IAAtB,CAA2B,GAA3B,CAA3B;;AAEA,MAAIT,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAOM,kBAAP;AACD;;AAED,SAAUP,IAAV,SAAkBO,kBAAlB;AACD;AAKD,OAAO,SAASG,iBAAT,CAA2BV,IAA3B,EAAiC;AACtC,MAAME,KAAK,GAAGF,IAAI,CAACG,WAAL,CAAiB,GAAjB,EAAsBH,IAAI,CAACC,MAAL,GAAc,CAApC,CAAd;;AACA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAOF,IAAP;AACD;;AAED,SAAOA,IAAI,CAACI,KAAL,CAAWF,KAAK,GAAG,CAAnB,CAAP;AACD;AAOD,OAAO,SAASM,UAAT,CAAoBR,IAApB,EAA0B;AAC/B,SAAOA,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACZ,MAAF,GAAW,CAAf;AAAA,GAAxB,CAAP;AACD;AAOD,OAAO,SAASa,WAAT,CAAqBd,IAArB,EAA2B;AAChC,SAAO,CAACQ,UAAU,CAACR,IAAD,CAAV,CAAiBC,MAAzB;AACD;AAOD,OAAO,SAASc,sBAAT,CAAgCf,IAAhC,EAAsC;AAC3C,MAAMgB,MAAM,GAAGR,UAAU,CAACR,IAAD,CAAzB;AACA,MAAIiB,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACf,MAA3B,EAAmCiB,CAAC,EAApC,EAAwC;AACtCD,IAAAA,UAAU,UAAQE,kBAAkB,CAACC,MAAM,CAACJ,MAAM,CAACE,CAAD,CAAP,CAAP,CAApC;AACD;;AACD,SAAOD,UAAU,IAAI,GAArB;AACD;AAGD,OAAO,IAAMI,kBAAkB,GAAG,6BAA3B;AAOP,OAAO,SAASC,WAAT,CAAqBtB,IAArB,EAA2B;AAChC,SAAO,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACC,MAAL,KAAgB,CAA5C,IAAiD,CAACoB,kBAAkB,CAACE,IAAnB,CAAwBvB,IAAxB,CAAzD;AACD;AAGD,OAAO,IAAMwB,iBAAiB,GAAG,gCAA1B;AAOP,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACzB,MAAJ,KAAe,CAA1C,IAA+C,CAACuB,iBAAiB,CAACD,IAAlB,CAAuBvB,IAAvB,CAAvD;AACD;AAOD,OAAO,SAAS2B,UAAT,CAAoB3B,IAApB,EAA0B;AAC/B,MAAI4B,SAAS,GAAG5B,IAAI,CAAC6B,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAhB;;AACA,MAAID,SAAS,CAACE,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAC3BF,IAAAA,SAAS,GAAGG,kBAAkB,CAACH,SAAD,CAA9B;AACD;;AACD,SAAOA,SAAP;AACD","sourcesContent":["/*\r\n * Copyright (c) 2016-present Invertase Limited & Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this library except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n */\r\n\r\n/**\r\n * Returns the next parent of the path e.g. /foo/bar/car -> /foo/bar\r\n */\r\nexport function pathParent(path) {\r\n  if (path.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const index = path.lastIndexOf('/');\r\n  if (index <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return path.slice(0, index);\r\n}\r\n\r\n/**\r\n * Joins a parent and a child path\r\n */\r\nexport function pathChild(path, childPath) {\r\n  const canonicalChildPath = pathPieces(childPath).join('/');\r\n\r\n  if (path.length === 0) {\r\n    return canonicalChildPath;\r\n  }\r\n\r\n  return `${path}/${canonicalChildPath}`;\r\n}\r\n\r\n/**\r\n * Returns the last component of a path, e.g /foo/bar.jpeg -> bar.jpeg\r\n */\r\nexport function pathLastComponent(path) {\r\n  const index = path.lastIndexOf('/', path.length - 2);\r\n  if (index === -1) {\r\n    return path;\r\n  }\r\n\r\n  return path.slice(index + 1);\r\n}\r\n\r\n/**\r\n * Returns all none empty pieces of the path\r\n * @param path\r\n * @returns {*}\r\n */\r\nexport function pathPieces(path) {\r\n  return path.split('/').filter($ => $.length > 0);\r\n}\r\n\r\n/**\r\n * Returns whether a given path is empty\r\n * @param path\r\n * @returns {boolean}\r\n */\r\nexport function pathIsEmpty(path) {\r\n  return !pathPieces(path).length;\r\n}\r\n\r\n/**\r\n * Converts a given path to a URL encoded string\r\n * @param path\r\n * @returns {string|string}\r\n */\r\nexport function pathToUrlEncodedString(path) {\r\n  const pieces = pathPieces(path);\r\n  let pathString = '';\r\n  for (let i = 0; i < pieces.length; i++) {\r\n    pathString += `/${encodeURIComponent(String(pieces[i]))}`;\r\n  }\r\n  return pathString || '/';\r\n}\r\n\r\n// eslint-disable-next-line no-control-regex\r\nexport const INVALID_PATH_REGEX = /[[\\].#$\\u0000-\\u001F\\u007F]/;\r\n\r\n/**\r\n * Ensures a given path is a valid Firebase path\r\n * @param path\r\n * @returns {boolean}\r\n */\r\nexport function isValidPath(path) {\r\n  return typeof path === 'string' && path.length !== 0 && !INVALID_PATH_REGEX.test(path);\r\n}\r\n\r\n// eslint-disable-next-line no-control-regex\r\nexport const INVALID_KEY_REGEX = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n\r\n/**\r\n * Ensures a given key is a valid Firebase key\r\n * @param key\r\n * @returns {boolean}\r\n */\r\nexport function isValidKey(key) {\r\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX.test(path);\r\n}\r\n\r\n/**\r\n * Converts a file path to a standardized string path\r\n * @param path\r\n * @returns {*}\r\n */\r\nexport function toFilePath(path) {\r\n  let _filePath = path.replace('file://', '');\r\n  if (_filePath.includes('%')) {\r\n    _filePath = decodeURIComponent(_filePath);\r\n  }\r\n  return _filePath;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}