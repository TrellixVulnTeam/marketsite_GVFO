{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\RegistrationScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\nimport { Picker } from '@react-native-picker/picker';\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar checkPassword = function checkPassword(str) {\n  var re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n  return re.test(str);\n};\n\nvar checkemail = function checkemail(str) {\n  var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return re.test(str);\n};\n\nvar RegistrationScreen = function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var pressy = function pressy() {\n    setIsSecureEntry(function (prev) {\n      return !prev;\n    });\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedUser = _useState2[0],\n      setSelectedUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailValid = _useState4[0],\n      setemailIsValid = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordIsValid = _useState6[0],\n      setPasswordIsValid = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailValidationMsg = _useState8[0],\n      setemailValidationMsg = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordValidationMsg = _useState10[0],\n      setPasswordValidationMsg = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isSecureEntry = _useState12[0],\n      setIsSecureEntry = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setemail = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      accountype = _useState18[0],\n      setAccountType = _useState18[1];\n\n  var isEmailValid = function isEmailValid(text) {\n    if (!checkemail(text)) return false;\n    return true;\n  };\n\n  var isPasswordvalid = function isPasswordvalid(text) {\n    if (!checkPassword(text)) return false;\n    return true;\n  };\n\n  var userSignup = function userSignup() {\n    var result, u_id, errorMessage;\n    return _regeneratorRuntime.async(function userSignup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email || password)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n          case 4:\n            result = _context.sent;\n            u_id = firebase.auth().currentUser.uid;\n\n            if (selectedUser == 'ServiceProvider') {\n              db.collection(\"serviceprovider\").doc(email).set({\n                email: email,\n                accountype: selectedUser,\n                serviceprovider_id: u_id,\n                name: \"\",\n                phoneno: \"\",\n                dob: \"\",\n                finalCharge: \"\",\n                experience: \"\",\n                address: \"\",\n                City: \"\",\n                idStatus: true,\n                service_Done: \"0\",\n                ratings: \"0\",\n                category_type: \"\",\n                earnings: \"0\"\n              });\n            } else {\n              db.collection(\"serviceseeker\").doc(email).set({\n                email: email,\n                accountype: selectedUser,\n                serviceprovider_id: u_id,\n                name: \"\",\n                phoneno: \"\",\n                dob: \"\",\n                address: \"\",\n                City: \"\"\n              });\n            }\n\n            navigation.navigate('Login');\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            errorMessage = _context.t0.message;\n            Alert.alert(errorMessage);\n\n          case 14:\n            _context.next = 18;\n            break;\n\n          case 16:\n            if (!isEmailValid(Email)) {\n              setEmailIsValid(false);\n              setEmailValidationMsg(\"Please enter a valid email address\");\n            } else {\n              setEmailValidationMsg(\"\");\n              setEmailIsValid(true);\n            }\n\n            if (!isPasswordvalid(password)) {\n              setPasswordIsValid(false);\n              setPasswordValidationMsg(\"Must be 6 Char long and use combinations\");\n            } else {\n              setPasswordValidationMsg(\"\");\n              setPasswordIsValid(true);\n            }\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"rgba(148,131,131,1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.textStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Register\"), React.createElement(MaterialButtonLight, {\n    style: styles.materialButtonLight,\n    click: userSignup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  }, \"Register\"))), React.createElement(Text, {\n    style: styles.regline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Join Us,\", \"\\n\", \"Let Us help you get your services\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"  Email Address\",\n    style: styles.phoneno,\n    onChangeText: function onChangeText(text) {\n      return setemail(text);\n    },\n    id: \"phoneno\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, !emailValid && React.createElement(Text, {\n    style: {\n      marginLeft: 88,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, emailValidationMsg))), React.createElement(View, {\n    style: styles.accounttypeStack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker, {\n    style: styles.accounttype,\n    id: \"accountype\",\n    selectedValue: selectedUser,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedUser(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Account Type\",\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Service Seeker\",\n    value: \"ServiceSeeker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Service Provider\",\n    value: \"ServiceProvider\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }))), React.createElement(Text, {\n    onPress: function onPress() {\n      return pressy();\n    },\n    style: {\n      marginLeft: 260,\n      marginBottom: -30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, isSecureEntry ? 'Show' : 'Hide'), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"  Password\",\n    numberOfLines: 1,\n    secureTextEntry: isSecureEntry,\n    style: styles.password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    id: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, !passwordIsValid && React.createElement(Text, {\n    style: {\n      marginLeft: 88,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 27\n    }\n  }, passwordValidationMsg))), React.createElement(View, {\n    style: styles.downlineRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.downline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\"), React.createElement(Text, {\n    style: styles.login,\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Login\")), React.createElement(View, {\n    style: styles.image2Stack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/Ellipse_1.png\"),\n    resizeMode: \"contain\",\n    style: styles.image2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/images/Ellipse_2.png\"),\n    resizeMode: \"contain\",\n    style: styles.image3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(255,255,255,0.7)\",\n    borderWidth: 0,\n    borderColor: \"#000000\",\n    borderTopRightRadius: 0,\n    borderRadius: 22\n  },\n  text: {\n    top: 26,\n    position: \"absolute\",\n    color: \"rgba(255,255,255,1)\",\n    textAlign: \"justify\",\n    left: 98\n  },\n  materialButtonLight: {\n    height: 40,\n    width: 248,\n    borderRadius: 20,\n    alignSelf: \"center\",\n    marginTop: 23\n  },\n  textStack: {\n    width: 248,\n    height: 43,\n    marginTop: 504,\n    marginLeft: 73\n  },\n  regline: {\n    color: \"#121212\",\n    fontSize: 17,\n    marginTop: -318,\n    alignSelf: \"center\"\n  },\n  phoneno: {\n    color: \"#121212\",\n    height: 40,\n    width: 248,\n    backgroundColor: \"rgba(255,251,251,1)\",\n    marginTop: 33,\n    marginLeft: 79\n  },\n  accounttype: {\n    top: 0,\n    left: 0,\n    position: \"absolute\",\n    color: \"#121212\",\n    height: 40,\n    width: 248,\n    backgroundColor: \"rgba(255,251,251,1)\",\n    color: '#b3afaf'\n  },\n  accounttypeStack: {\n    width: 248,\n    height: 40,\n    marginLeft: 79\n  },\n  password: {\n    color: \"#121212\",\n    height: 40,\n    width: 248,\n    backgroundColor: \"rgba(255,251,251,1)\",\n    marginTop: 33,\n    marginLeft: 79\n  },\n  forgotPassword: {\n    color: \"rgba(196,196,196,1)\",\n    fontSize: 16,\n    marginTop: 64,\n    marginLeft: 140\n  },\n  downline: {\n    color: \"#121212\",\n    fontSize: 16,\n    marginTop: 3\n  },\n  login: {\n    color: \"rgba(196,196,196,1)\",\n    fontSize: 18,\n    marginLeft: 6\n  },\n  caption: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  downlineRow: {\n    height: 24,\n    flexDirection: \"row\",\n    marginTop: 3,\n    marginLeft: 75,\n    marginRight: 63\n  },\n  image2: {\n    top: 0,\n    left: -10,\n    width: 200,\n    height: 200,\n    position: \"absolute\"\n  },\n  image3: {\n    top: 0,\n    left: 136,\n    width: 200,\n    height: 200,\n    position: \"absolute\"\n  },\n  image2Stack: {\n    width: 336,\n    height: 204,\n    marginTop: -582,\n    marginLeft: -60\n  }\n});\nexport default RegistrationScreen;","map":{"version":3,"sources":["D:/marketsite/screens/RegistrationScreen.js"],"names":["React","useState","MaterialButtonLight","Picker","firebase","db","checkPassword","str","re","test","checkemail","RegistrationScreen","navigation","pressy","setIsSecureEntry","prev","selectedUser","setSelectedUser","emailValid","setemailIsValid","passwordIsValid","setPasswordIsValid","emailValidationMsg","setemailValidationMsg","passwordValidationMsg","setPasswordValidationMsg","isSecureEntry","email","setemail","password","setPassword","accountype","setAccountType","isEmailValid","text","isPasswordvalid","userSignup","auth","createUserWithEmailAndPassword","result","u_id","currentUser","uid","collection","doc","set","serviceprovider_id","name","phoneno","dob","finalCharge","experience","address","City","idStatus","service_Done","ratings","category_type","earnings","navigate","errorMessage","message","Alert","alert","Email","setEmailIsValid","setEmailValidationMsg","Keyboard","dismiss","styles","container","textStack","materialButtonLight","caption","regline","height","marginLeft","color","accounttypeStack","accounttype","itemValue","itemIndex","marginBottom","downlineRow","downline","login","image2Stack","require","image2","image3","StyleSheet","create","flex","backgroundColor","borderWidth","borderColor","borderTopRightRadius","borderRadius","top","position","textAlign","left","width","alignSelf","marginTop","fontSize","forgotPassword","fontWeight","flexDirection","marginRight"],"mappings":"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","sourcesContent":["import React, {useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  StatusBar,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Alert\r\n} from \"react-native\";\r\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport * as firebase from 'firebase';\r\nimport db from \"../config\";\r\n\r\n\r\nconst checkPassword = (str) =>\r\n{\r\n    var re =  /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\r\n    return re.test(str);\r\n}\r\n\r\nconst checkemail = (str) =>\r\n{\r\n  const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return re.test(str);\r\n}\r\n\r\nconst RegistrationScreen = ({navigation}) => {\r\n\r\n  const pressy =\r\n    ()=>{\r\n      setIsSecureEntry((prev) => !prev);\r\n    }\r\n  \r\n  const [selectedUser, setSelectedUser] = useState();\r\n  \r\n  const [emailValid,setemailIsValid] = useState(false);\r\n  const [passwordIsValid,setPasswordIsValid] = useState(false);\r\n  const [emailValidationMsg, setemailValidationMsg] = useState(\"\");\r\n  const [passwordValidationMsg, setPasswordValidationMsg] = useState(\"\");\r\n  const [isSecureEntry,setIsSecureEntry] = useState(true);\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");  const [accountype,setAccountType] = useState(\"\");\r\n\r\n  const isEmailValid = text =>{\r\n    if(!checkemail(text)) return false;\r\n    return true;\r\n  }\r\n\r\n  const isPasswordvalid = text =>{\r\n    if(!checkPassword(text)) return false;\r\n    return true;\r\n  }    \r\n\r\n      const userSignup = async() =>{\r\n        if(email || password ){\r\n          try {\r\n            const result = await firebase.auth().createUserWithEmailAndPassword(email,password);\r\n            let u_id=firebase.auth().currentUser.uid;\r\n            if(selectedUser=='ServiceProvider'){              \r\n            db.collection(\"serviceprovider\").doc(email).set({\r\n              email,\r\n              accountype:selectedUser,\r\n              serviceprovider_id:u_id,\r\n              name:\"\",\r\n              phoneno:\"\",\r\n              dob:\"\",\r\n              finalCharge:\"\",\r\n              experience:\"\",\r\n              address:\"\",\r\n              City:\"\",\r\n              idStatus:true,\r\n              service_Done:\"0\",\r\n              ratings:\"0\",\r\n              category_type:\"\",\r\n              earnings:\"0\"\r\n          })\r\n        }\r\n          else{\r\n            db.collection(\"serviceseeker\").doc(email).set({\r\n              email,\r\n              accountype:selectedUser,\r\n              serviceprovider_id:u_id,\r\n              name:\"\",\r\n              phoneno:\"\",\r\n              dob:\"\",\r\n              address:\"\",\r\n              City:\"\",\r\n            })\r\n          }\r\n          navigation.navigate('Login'); \r\n          \r\n          } catch (error) {\r\n            var errorMessage = error.message;\r\n            Alert.alert(errorMessage);\r\n          }\r\n        }else{\r\n          if(!isEmailValid(Email)){\r\n            setEmailIsValid(false);\r\n            setEmailValidationMsg(\"Please enter a valid email address\");\r\n        }\r\n          else {\r\n            setEmailValidationMsg(\"\");\r\n            setEmailIsValid(true);      \r\n            \r\n          }\r\n          if(!isPasswordvalid(password)){\r\n            setPasswordIsValid(false);\r\n            setPasswordValidationMsg(\"Must be 6 Char long and use combinations\");\r\n        }\r\n          else {\r\n            setPasswordValidationMsg(\"\");\r\n            setPasswordIsValid(true);\r\n            \r\n          }\r\n        }\r\n         \r\n        }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress = { () =>{\r\n      Keyboard.dismiss();\r\n   } } >\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"rgba(148,131,131,1)\" />\r\n      <View style={styles.textStack}>\r\n        <Text style={styles.text}>Register</Text>\r\n        <MaterialButtonLight\r\n          style={styles.materialButtonLight} click={userSignup}\r\n        ><Text style={styles.caption}>Register</Text></MaterialButtonLight>\r\n      </View>\r\n      <Text style={styles.regline}>\r\n        Join Us,{\"\\n\"}Let Us help you get your services\r\n      </Text>\r\n      <View>\r\n      <TextInput placeholder=\"  Email Address\" \r\n      style={styles.phoneno} \r\n      onChangeText={text => setemail(text)}\r\n      id=\"phoneno\"\r\n      />\r\n        <View style={{height:20}}>\r\n      {!emailValid && <Text style={{marginLeft:88,color:'red'}}>{emailValidationMsg}</Text>} \r\n        </View>\r\n\r\n      </View>\r\n      <View style={styles.accounttypeStack}>\r\n      <Picker style={styles.accounttype} id=\"accountype\" selectedValue={selectedUser} onValueChange={(itemValue,itemIndex)=>\r\n      setSelectedUser(itemValue)}>\r\n      <Picker.Item  label=\"Account Type\" value=\"0\"/>\r\n      <Picker.Item label=\"Service Seeker\" value=\"ServiceSeeker\" />\r\n      <Picker.Item label=\"Service Provider\" value=\"ServiceProvider\" /> \r\n      </Picker>\r\n      </View>\r\n      <Text onPress={()=> pressy()} style={{marginLeft:260, marginBottom:-30}}\r\n      >{isSecureEntry ? 'Show' : 'Hide'}</Text>\r\n      <View>\r\n\r\n      <TextInput\r\n        placeholder=\"  Password\" \r\n        numberOfLines={1}\r\n        secureTextEntry={isSecureEntry}\r\n        style={styles.password}\r\n        onChangeText={text => setPassword(text)}\r\n        id=\"password\"\r\n      />\r\n      <View style={{height:20}}>\r\n     {!passwordIsValid && <Text style={{marginLeft:88,color:'red'}}>{passwordValidationMsg}</Text>} \r\n      </View>\r\n      </View>\r\n      <View style={styles.downlineRow}>\r\n        <Text style={styles.downline}>Already have an account?</Text>\r\n        <Text style={styles.login} onPress={() => {\r\n            navigation.navigate('Login');\r\n          }}>Login</Text>\r\n      </View>\r\n      <View style={styles.image2Stack}>\r\n        <Image\r\n          source={require(\"../assets/images/Ellipse_1.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image2}\r\n        ></Image>\r\n        <Image\r\n          source={require(\"../assets/images/Ellipse_2.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image3}\r\n        ></Image>\r\n      </View>\r\n    </View></TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(255,255,255,0.7)\",\r\n    borderWidth: 0,\r\n    borderColor: \"#000000\",\r\n    borderTopRightRadius: 0,\r\n    borderRadius: 22,\r\n\r\n  },\r\n  text: {\r\n    top: 26,\r\n    position: \"absolute\",\r\n    color: \"rgba(255,255,255,1)\",\r\n    textAlign: \"justify\",\r\n    left: 98\r\n  },\r\n  materialButtonLight: {\r\n    height: 40,\r\n    width: 248,\r\n    borderRadius: 20,\r\n    alignSelf: \"center\",\r\n    marginTop:23\r\n  },\r\n  textStack: {\r\n    width: 248,\r\n    height: 43,\r\n    marginTop: 504,\r\n    marginLeft: 73\r\n  },\r\n  regline: {\r\n    color: \"#121212\",\r\n    fontSize: 17,\r\n    marginTop: -318,\r\n    alignSelf: \"center\"\r\n  },\r\n  phoneno: {\r\n    color: \"#121212\",\r\n    height: 40,\r\n    width: 248,\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    marginTop: 33,\r\n    marginLeft: 79,\r\n  },\r\n  accounttype: {\r\n    top: 0,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    color: \"#121212\",\r\n    height: 40,\r\n    width: 248,\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    color:'#b3afaf',\r\n\r\n      },\r\n  accounttypeStack: {\r\n    width: 248,\r\n    height: 40,\r\n    marginLeft: 79\r\n  },\r\n  password: {\r\n    color: \"#121212\",\r\n    height: 40,\r\n    width: 248,\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    marginTop: 33,\r\n    marginLeft: 79\r\n  },\r\n  forgotPassword: {\r\n    color: \"rgba(196,196,196,1)\",\r\n    fontSize: 16,\r\n    marginTop: 64,\r\n    marginLeft: 140\r\n  },\r\n  downline: {\r\n    color: \"#121212\",\r\n    fontSize: 16,\r\n    marginTop: 3\r\n  },\r\n  login: {\r\n    color: \"rgba(196,196,196,1)\",\r\n    fontSize: 18,\r\n    marginLeft: 6\r\n  },\r\n  caption: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n    fontWeight:'bold',\r\n  },\r\n  downlineRow: {\r\n    height: 24,\r\n    flexDirection: \"row\",\r\n    marginTop: 3,\r\n    marginLeft: 75,\r\n    marginRight: 63\r\n  },\r\n  image2: {\r\n    top: 0,\r\n    left: -10,\r\n    width: 200,\r\n    height: 200,\r\n    position: \"absolute\"\r\n  },\r\n  image3: {\r\n    top: 0,\r\n    left: 136,\r\n    width: 200,\r\n    height: 200,\r\n    position: \"absolute\"\r\n  },\r\n  image2Stack: {\r\n    width: 336,\r\n    height: 204,\r\n    marginTop: -582,\r\n    marginLeft: -60\r\n  }\r\n});\r\n\r\nexport default RegistrationScreen;\r\n \r\n"]},"metadata":{},"sourceType":"module"}