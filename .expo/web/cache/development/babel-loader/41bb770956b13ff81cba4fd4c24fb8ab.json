{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport moment from \"moment\";\n\nvar store = function store(key, value) {\n  var item;\n  return _regeneratorRuntime.async(function store$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          item = {\n            value: value,\n            timestamp: Date.now()\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(item)));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar get = function get(key) {\n  var value, item;\n  return _regeneratorRuntime.async(function get$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          value = _context2.sent;\n          item = JSON.parse(value);\n\n          if (item) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 7:\n          return _context2.abrupt(\"return\", item.value);\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\n\nexport default {\n  store: store,\n  get: get\n};","map":{"version":3,"sources":["D:/marketsite/cache.js"],"names":["AsyncStorage","moment","store","key","value","item","timestamp","Date","now","setItem","JSON","stringify","console","log","get","getItem","parse"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEJC,UAAAA,IAFI,GAEG;AACXD,YAAAA,KAAK,EAALA,KADW;AAEXE,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAFA,WAFH;AAAA;AAAA,2CAOJR,YAAY,CAACS,OAAb,CAAqBN,GAArB,EAA0BO,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA1B,CAPI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASVO,UAAAA,OAAO,CAACC,GAAR;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAeA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAOX,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEYH,YAAY,CAACe,OAAb,CAAqBZ,GAArB,CAFZ;;AAAA;AAEFC,UAAAA,KAFE;AAGFC,UAAAA,IAHE,GAGKK,IAAI,CAACM,KAAL,CAAWZ,KAAX,CAHL;;AAAA,cAKHC,IALG;AAAA;AAAA;AAAA;;AAAA,4CAKU,IALV;;AAAA;AAAA,4CAODA,IAAI,CAACD,KAPJ;;AAAA;AAAA;AAAA;AASRQ,UAAAA,OAAO,CAACC,GAAR;;AATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAaA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbY,EAAAA,GAAG,EAAHA;AAFa,CAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport moment from \"moment\";\r\n\r\nconst store = async (key, value) => {\r\n  try {\r\n    const item = {\r\n      value,\r\n      timestamp: Date.now(),\r\n    };\r\n    \r\n    await AsyncStorage.setItem(key, JSON.stringify(item));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst get = async (key) => {\r\n  try {\r\n    const value = await AsyncStorage.getItem(key);\r\n    const item = JSON.parse(value);\r\n\r\n    if (!item) return null;\r\n\r\n    return item.value;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  store,\r\n  get,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}