{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\OngoingLeads.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Svg, { Ellipse } from \"react-native-svg\";\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar OngoingLeads = function OngoingLeads(_ref) {\n  var navigation = _ref.navigation;\n\n  var renderGridItem = function renderGridItem(itemData) {\n    var unixtimestamp = itemData.item.date_time.seconds;\n    var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var date = new Date(unixtimestamp * 1000);\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var convdataTime = month + '-' + day + '-' + year + ' at ' + hours + ':' + minutes.substr(-2);\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.newleadslist,\n      onPress: function onPress() {\n        navigation.navigate('OngoingDetail', {\n          details: {\n            BookingTime: convdataTime,\n            CategoryName: itemData.item.category_name,\n            BookingAddress: itemData.item.AddressData.address,\n            BookingArea: itemData.item.AddressData.area,\n            BookingCity: itemData.item.AddressData.city,\n            BookingPincode: itemData.item.AddressData.pincode,\n            SlotTime: itemData.item.BookingTime,\n            SlotDate: itemData.item.Booking_Date,\n            ConsumerName: itemData.item.consumer_name,\n            Booking_id: itemData.item.Booking_id,\n            Consumer_id: itemData.item.Consumer_id,\n            job_Status: itemData.item.jobStatus,\n            Service_id: itemData.item.Service_id\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.leadnameRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }\n    }, React.createElement(Text, {\n      style: styles.leadname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, itemData.item.consumer_name), React.createElement(Text, {\n      style: styles.time,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, itemData.item.BookingTime)), React.createElement(View, {\n      style: styles.locationRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }\n    }, React.createElement(Text, {\n      style: styles.location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, itemData.item.AddressData.area, \", \", itemData.item.AddressData.city), React.createElement(Text, {\n      style: styles.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, itemData.item.Booking_Date)), React.createElement(Text, {\n      style: {\n        color: \"green\",\n        height: 30,\n        width: 130,\n        fontSize: 18,\n        marginTop: 5,\n        marginLeft: 21\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 3\n      }\n    }, itemData.item.jobStatus)));\n  };\n\n  var result = [];\n  var finalresult = [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Service = _useState4[0],\n      setService = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lead = _useState6[0],\n      setLead = _useState6[1];\n\n  var email = firebase.auth().currentUser.email;\n\n  var getService = function getService() {\n    return _regeneratorRuntime.async(function getService$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"service\").doc(email).collection(email).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                result.push(doc.data());\n              });\n            }));\n\n          case 2:\n            setService(result);\n            Service.forEach(function _callee(item) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(db.collection(\"booking\").doc(item.Consumer_id).collection(item.Consumer_id).doc(item.Booking_id).get().then(function (querySnapshot) {\n                        finalresult.push(querySnapshot.data());\n                      }));\n\n                    case 2:\n                      setLead(finalresult);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getService();\n  }, [loading]);\n  return React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.Booking_id;\n    },\n    data: lead,\n    renderItem: renderGridItem,\n    style: {\n      marginTop: 30\n    },\n    onRefresh: function onRefresh() {\n      setLoading(true);\n      getService();\n      setLoading(false);\n    },\n    refreshing: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(238,238,238,1)\",\n    marginTop: 0,\n    width: \"100%\"\n  },\n  newleadslist: {\n    width: 393,\n    height: 110,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    marginTop: 0,\n    width: \"100%\"\n  },\n  leadname: {\n    color: \"#121212\",\n    height: 27,\n    fontSize: 18,\n    width: 175\n  },\n  time: {\n    color: \"#121212\",\n    height: 27,\n    width: 75,\n    fontSize: 18,\n    marginLeft: 125,\n    textAlign: 'justify',\n    justifyContent: 'flex-end'\n  },\n  leadnameRow: {\n    height: 27,\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginLeft: 21,\n    marginRight: 41,\n    width: '100%'\n  },\n  location: {\n    color: \"rgba(167,79,79,1)\",\n    height: 27,\n    width: 196,\n    fontSize: 18,\n    marginTop: 1\n  },\n  date: {\n    color: \"#121212\",\n    height: 27,\n    width: 90,\n    fontSize: 18,\n    marginLeft: 72\n  },\n  locationRow: {\n    height: 28,\n    flexDirection: \"row\",\n    marginTop: 4,\n    marginLeft: 21,\n    marginRight: 26,\n    width: '100%'\n  },\n  ellipse: {\n    top: 0,\n    left: 0,\n    width: 100,\n    height: 100,\n    position: \"absolute\"\n  },\n  image: {\n    top: 23,\n    left: 23,\n    width: 70,\n    height: 69,\n    position: \"absolute\"\n  },\n  ellipseStack: {\n    width: 100,\n    height: 100,\n    marginTop: \"140%\",\n    marginLeft: 280,\n    position: 'absolute'\n  }\n});\nexport default OngoingLeads;","map":{"version":3,"sources":["D:/marketsite/screens/OngoingLeads.js"],"names":["React","useState","useEffect","Svg","Ellipse","firebase","db","OngoingLeads","navigation","renderGridItem","itemData","unixtimestamp","item","date_time","seconds","months_arr","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","convdataTime","substr","styles","container","newleadslist","navigate","details","BookingTime","CategoryName","category_name","BookingAddress","AddressData","address","BookingArea","area","BookingCity","city","BookingPincode","pincode","SlotTime","SlotDate","Booking_Date","ConsumerName","consumer_name","Booking_id","Consumer_id","job_Status","jobStatus","Service_id","leadnameRow","leadname","time","locationRow","location","color","height","width","fontSize","marginTop","marginLeft","result","finalresult","loading","setLoading","Service","setService","lead","setLead","email","auth","currentUser","getService","collection","doc","get","then","querySnapshot","forEach","push","data","StyleSheet","create","flex","backgroundColor","textAlign","justifyContent","flexDirection","marginRight","ellipse","top","left","position","image","ellipseStack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { StyleSheet, View, Text, Image , FlatList} from \"react-native\";\r\nimport Svg, { Ellipse } from \"react-native-svg\";\r\nimport * as firebase from 'firebase';\r\nimport db from '../config';\r\n\r\nconst  OngoingLeads=({navigation})=> {\r\n\r\n  const renderGridItem = (itemData) =>{\r\n    //converting timestamp from seconds to Standard Time\r\n    var unixtimestamp =itemData.item.date_time.seconds;\r\n    // Months array\r\n    var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    // Convert timestamp to milliseconds\r\n    var date = new Date(unixtimestamp*1000);\r\n    // Year\r\n    var year = date.getFullYear();\r\n    // Month\r\n    var month = months_arr[date.getMonth()];\r\n    // Day\r\n    var day = date.getDate();\r\n    // Hours\r\n    var hours = date.getHours();\r\n   \r\n    // Minutes\r\n    var minutes = \"0\" + date.getMinutes();\r\n   \r\n    // Display date time in MM-dd-yyyy h:m:s format\r\n    var convdataTime = month+'-'+day+'-'+year+' at '+hours + ':' + minutes.substr(-2);\r\n    \r\n    return <View style={styles.container}>\r\n    <TouchableOpacity style={styles.newleadslist} onPress={() => {\r\n      navigation.navigate('OngoingDetail',{\r\n        details:{\r\n          BookingTime:convdataTime,\r\n          CategoryName:itemData.item.category_name,\r\n          BookingAddress: itemData.item.AddressData.address,\r\n          BookingArea: itemData.item.AddressData.area,\r\n          BookingCity:itemData.item.AddressData.city,\r\n          BookingPincode:itemData.item.AddressData.pincode,\r\n          SlotTime:itemData.item.BookingTime,\r\n          SlotDate:itemData.item.Booking_Date,\r\n          ConsumerName:itemData.item.consumer_name,\r\n          Booking_id:itemData.item.Booking_id,\r\n          Consumer_id:itemData.item.Consumer_id,\r\n          job_Status:itemData.item.jobStatus,\r\n          Service_id:itemData.item.Service_id,\r\n        }\r\n      });\r\n    }}>\r\n  <View style={styles.leadnameRow}>\r\n    <Text style={styles.leadname}>{itemData.item.consumer_name}</Text>\r\n    <Text style={styles.time}>{itemData.item.BookingTime}</Text>\r\n  </View>\r\n  <View style={styles.locationRow}>\r\n    <Text style={styles.location}>{itemData.item.AddressData.area}, {itemData.item.AddressData.city}</Text>\r\n    <Text style={styles.date}>{itemData.item.Booking_Date}</Text>\r\n  </View>\r\n  <Text style={{\r\n    color: \"green\",\r\n    height: 30,\r\n    width: 130,\r\n    fontSize: 18,\r\n    marginTop: 5,\r\n    marginLeft: 21\r\n  }}>{itemData.item.jobStatus}</Text>\r\n</TouchableOpacity></View>\r\n  };\r\n\r\n  const result = [];\r\n  const finalresult = [];\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [Service, setService] = useState([]);\r\n  const [lead, setLead] = useState([]);\r\n  const email=firebase.auth().currentUser.email;\r\n\r\n  const getService = async () => {\r\n\r\n    await db.collection(\"service\").doc(email).collection(email).get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n          result.push(doc.data());\r\n      });\r\n  }); \r\n  \r\n  setService(result);\r\n  \r\n  Service.forEach(async item =>  {\r\n    await db.collection(\"booking\").doc(item.Consumer_id).collection(item.Consumer_id).doc(item.Booking_id).get().then((querySnapshot) => {\r\n      finalresult.push(querySnapshot.data());\r\n    });\r\n    setLead(finalresult);\r\n     \r\n  });\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    getService();\r\n  },[loading]);\r\n\r\n  \r\n  // if(loading) return null\r\n  return (\r\n            <FlatList\r\n        keyExtractor={(item) => item.Booking_id}\r\n        data={lead} \r\n        renderItem={renderGridItem} style={{marginTop:30}}\r\n        onRefresh={()=>{\r\n          setLoading(true)\r\n          getService()\r\n          setLoading(false)}\r\n        }\r\n        refreshing={loading}\r\n        />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(238,238,238,1)\",\r\n    marginTop:0,\r\n    width:\"100%\"\r\n  },\r\n  newleadslist: {\r\n    width: 393,\r\n    height: 110,\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    marginTop: 0,\r\n    width:\"100%\",\r\n  },\r\n  leadname: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    fontSize: 18,\r\n    width:175\r\n  },\r\n  time: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    width: 75,\r\n    fontSize: 18,\r\n    marginLeft: 125,\r\n    textAlign:'justify',\r\n    justifyContent:'flex-end',\r\n  },\r\n  leadnameRow: {\r\n    height: 27,\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    marginLeft: 21,\r\n    marginRight: 41,\r\n    width:'100%'\r\n  },\r\n  location: {\r\n    color: \"rgba(167,79,79,1)\",\r\n    height: 27,\r\n    width: 196,\r\n    fontSize: 18,\r\n    marginTop: 1\r\n  },\r\n  date: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    width: 90,\r\n    fontSize: 18,\r\n    marginLeft: 72\r\n  },\r\n  locationRow: {\r\n    height: 28,\r\n    flexDirection: \"row\",\r\n    marginTop: 4,\r\n    marginLeft: 21,\r\n    marginRight: 26,\r\n    width:'100%'\r\n  },\r\n  ellipse: {\r\n    top: 0,\r\n    left: 0,\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\"\r\n  },\r\n  image: {\r\n    top: 23,\r\n    left: 23,\r\n    width: 70,\r\n    height: 69,\r\n    position: \"absolute\"\r\n  },\r\n  ellipseStack: {\r\n    width: 100,\r\n    height: 100,\r\n    marginTop: \"140%\",\r\n    marginLeft: 280,\r\n    position:'absolute'\r\n  }\r\n});\r\n\r\nexport default OngoingLeads;\r\n"]},"metadata":{},"sourceType":"module"}