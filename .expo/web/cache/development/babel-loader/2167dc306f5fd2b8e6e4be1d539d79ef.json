{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\NewLeads.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Svg, { Ellipse } from \"react-native-svg\";\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar NewLeads = function NewLeads(_ref) {\n  var navigation = _ref.navigation;\n\n  var renderGridItem = function renderGridItem(itemData) {\n    var unixtimestamp = itemData.item.date_time.seconds;\n    var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var date = new Date(unixtimestamp * 1000);\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var convdataTime = month + '-' + day + '-' + year + ' at ' + hours + ':' + minutes.substr(-2);\n    return React.createElement(TouchableOpacity, {\n      style: styles.newleadslist,\n      onPress: function onPress() {\n        navigation.navigate('ServiceDetail', {\n          details: {\n            BookingTime: convdataTime,\n            CategoryName: itemData.item.category_name,\n            BookingAddress: itemData.item.AddressData.address,\n            BookingArea: itemData.item.AddressData.area,\n            BookingCity: itemData.item.AddressData.city,\n            BookingPincode: itemData.item.AddressData.pincode,\n            SlotTime: itemData.item.BookingTime,\n            SlotDate: itemData.item.Booking_Date,\n            ConsumerName: itemData.item.consumer_name,\n            Booking_id: itemData.item.Booking_id,\n            Consumer_id: itemData.item.Consumer_id\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: styles.leadnameRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }\n    }, React.createElement(Text, {\n      style: styles.leadname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, itemData.item.consumer_name), React.createElement(Text, {\n      style: styles.time,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, itemData.item.BookingTime)), React.createElement(View, {\n      style: styles.locationRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }\n    }, React.createElement(Text, {\n      style: styles.location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, itemData.item.AddressData.area, \", \", itemData.item.AddressData.city), React.createElement(Text, {\n      style: styles.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, itemData.item.Booking_Date)));\n  };\n\n  var result = [];\n  var finalresult = [];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Service = _useState4[0],\n      setService = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lead = _useState6[0],\n      setLead = _useState6[1];\n\n  var email = firebase.auth().currentUser.email;\n\n  var getService = function getService() {\n    return _regeneratorRuntime.async(function getService$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"service\").doc(email).collection(email).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                result.push(doc.data());\n              });\n            }));\n\n          case 2:\n            setService(result);\n            setLoading(false);\n            Service.forEach(function _callee(item) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(db.collection(\"booking\").doc(item.Consumer_id).collection(item.Consumer_id).doc(item.Booking_id).get().then(function (querySnapshot) {\n                        finalresult.push(querySnapshot.data());\n                      }));\n\n                    case 2:\n                      setLead(finalresult);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getService();\n  }, [loading]);\n  if (loading) return null;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.Booking_id;\n    },\n    data: lead,\n    renderItem: renderGridItem,\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.ellipseStack,\n    onPress: function onPress() {\n      navigation.navigate('postads');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Svg, {\n    viewBox: \"0 0 100 100\",\n    style: styles.ellipse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Ellipse, {\n    stroke: \"rgba(230, 230, 230,1)\",\n    strokeWidth: 0,\n    fill: \"rgba(255,255,255,1)\",\n    cx: 50,\n    cy: 50,\n    rx: 50,\n    ry: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), React.createElement(Image, {\n    source: require(\"../assets/images/advertisement.png\"),\n    resizeMode: \"contain\",\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: '#000000',\n      marginTop: '165%',\n      fontWeight: 'bold',\n      fontSize: 18,\n      marginLeft: 298,\n      position: 'absolute'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Post ads\"));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(238,238,238,1)\",\n    marginTop: 0,\n    width: \"100%\"\n  },\n  newleadslist: {\n    width: 393,\n    height: 82,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    marginTop: 0,\n    width: \"100%\"\n  },\n  leadname: {\n    color: \"#121212\",\n    height: 27,\n    fontSize: 18,\n    width: 175\n  },\n  time: {\n    color: \"#121212\",\n    height: 27,\n    width: 75,\n    fontSize: 18,\n    marginLeft: 125,\n    textAlign: 'justify',\n    justifyContent: 'flex-end'\n  },\n  leadnameRow: {\n    height: 27,\n    flexDirection: \"row\",\n    marginTop: 10,\n    marginLeft: 21,\n    marginRight: 41,\n    width: '100%'\n  },\n  location: {\n    color: \"rgba(167,79,79,1)\",\n    height: 27,\n    width: 196,\n    fontSize: 18,\n    marginTop: 1\n  },\n  date: {\n    color: \"#121212\",\n    height: 27,\n    width: 90,\n    fontSize: 18,\n    marginLeft: 72\n  },\n  locationRow: {\n    height: 28,\n    flexDirection: \"row\",\n    marginTop: 4,\n    marginLeft: 21,\n    marginRight: 26,\n    width: '100%'\n  },\n  ellipse: {\n    top: 0,\n    left: 0,\n    width: 100,\n    height: 100,\n    position: \"absolute\"\n  },\n  image: {\n    top: 23,\n    left: 23,\n    width: 70,\n    height: 69,\n    position: \"absolute\"\n  },\n  ellipseStack: {\n    width: 100,\n    height: 100,\n    marginTop: \"140%\",\n    marginLeft: 280,\n    position: 'absolute'\n  }\n});\nexport default NewLeads;","map":{"version":3,"sources":["D:/marketsite/screens/NewLeads.js"],"names":["React","useState","useEffect","Svg","Ellipse","firebase","db","NewLeads","navigation","renderGridItem","itemData","unixtimestamp","item","date_time","seconds","months_arr","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","convdataTime","substr","styles","newleadslist","navigate","details","BookingTime","CategoryName","category_name","BookingAddress","AddressData","address","BookingArea","area","BookingCity","city","BookingPincode","pincode","SlotTime","SlotDate","Booking_Date","ConsumerName","consumer_name","Booking_id","Consumer_id","leadnameRow","leadname","time","locationRow","location","result","finalresult","loading","setLoading","Service","setService","lead","setLead","email","auth","currentUser","getService","collection","doc","get","then","querySnapshot","forEach","push","data","container","marginTop","ellipseStack","ellipse","require","image","color","fontWeight","fontSize","marginLeft","position","StyleSheet","create","flex","backgroundColor","width","height","textAlign","justifyContent","flexDirection","marginRight","top","left"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { StyleSheet, View, Text, Image , FlatList} from \"react-native\";\r\nimport Svg, { Ellipse } from \"react-native-svg\";\r\nimport * as firebase from 'firebase';\r\nimport db from '../config';\r\n\r\nconst  NewLeads=({navigation})=> {\r\n\r\n  const renderGridItem = (itemData) =>{\r\n    //converting timestamp from seconds to Standard Time\r\n    var unixtimestamp =itemData.item.date_time.seconds;\r\n    // Months array\r\n    var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    // Convert timestamp to milliseconds\r\n    var date = new Date(unixtimestamp*1000);\r\n    // Year\r\n    var year = date.getFullYear();\r\n    // Month\r\n    var month = months_arr[date.getMonth()];\r\n    // Day\r\n    var day = date.getDate();\r\n    // Hours\r\n    var hours = date.getHours();\r\n   \r\n    // Minutes\r\n    var minutes = \"0\" + date.getMinutes();\r\n   \r\n    // Display date time in MM-dd-yyyy h:m:s format\r\n    var convdataTime = month+'-'+day+'-'+year+' at '+hours + ':' + minutes.substr(-2);\r\n    \r\n    return <TouchableOpacity style={styles.newleadslist} onPress={() => {\r\n      navigation.navigate('ServiceDetail',{\r\n        details:{\r\n          BookingTime:convdataTime,\r\n          CategoryName:itemData.item.category_name,\r\n          BookingAddress: itemData.item.AddressData.address,\r\n          BookingArea: itemData.item.AddressData.area,\r\n          BookingCity:itemData.item.AddressData.city,\r\n          BookingPincode:itemData.item.AddressData.pincode,\r\n          SlotTime:itemData.item.BookingTime,\r\n          SlotDate:itemData.item.Booking_Date,\r\n          ConsumerName:itemData.item.consumer_name,\r\n          Booking_id:itemData.item.Booking_id,\r\n          Consumer_id:itemData.item.Consumer_id,\r\n        }\r\n      });\r\n    }}>\r\n  <View style={styles.leadnameRow}>\r\n    <Text style={styles.leadname}>{itemData.item.consumer_name}</Text>\r\n    <Text style={styles.time}>{itemData.item.BookingTime}</Text>\r\n  </View>\r\n  <View style={styles.locationRow}>\r\n    <Text style={styles.location}>{itemData.item.AddressData.area}, {itemData.item.AddressData.city}</Text>\r\n    <Text style={styles.date}>{itemData.item.Booking_Date}</Text>\r\n  </View>\r\n</TouchableOpacity>\r\n  };\r\n\r\n  const result = [];\r\n  const finalresult = [];\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [Service, setService] = useState([]);\r\n  const [lead, setLead] = useState([]);\r\n  const email=firebase.auth().currentUser.email;\r\n\r\n  const getService = async () => {\r\n\r\n    await db.collection(\"service\").doc(email).collection(email).get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n          result.push(doc.data());\r\n      });\r\n  }); \r\n  \r\n  setService(result);\r\n  setLoading(false);\r\n  Service.forEach(async item =>  {\r\n    await db.collection(\"booking\").doc(item.Consumer_id).collection(item.Consumer_id).doc(item.Booking_id).get().then((querySnapshot) => {\r\n      finalresult.push(querySnapshot.data());\r\n    });\r\n    setLead(finalresult);\r\n     \r\n  });\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    getService();\r\n  },[loading]);\r\n\r\n  \r\n  if(loading) return null\r\n  return (\r\n    <View style={styles.container}>\r\n       <FlatList\r\n    keyExtractor={(item) => item.Booking_id}\r\n    data={lead} \r\n    renderItem={renderGridItem} style={{marginTop:30}}\r\n    />\r\n      <TouchableOpacity style={styles.ellipseStack} onPress={() => {\r\n            navigation.navigate('postads');\r\n          }}>\r\n        <Svg viewBox=\"0 0 100 100\" style={styles.ellipse}>\r\n          <Ellipse\r\n            stroke=\"rgba(230, 230, 230,1)\"\r\n            strokeWidth={0}\r\n            fill=\"rgba(255,255,255,1)\"\r\n            cx={50}\r\n            cy={50}\r\n            rx={50}\r\n            ry={50}\r\n          ></Ellipse>\r\n        </Svg>\r\n        <Image\r\n          source={require(\"../assets/images/advertisement.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image}\r\n        ></Image>\r\n      </TouchableOpacity>\r\n      <Text style={{color:'#000000',marginTop:'165%',fontWeight:'bold',fontSize:18,marginLeft:298,position:'absolute'}}>Post ads</Text>\r\n        \r\n    </View>\r\n     \r\n    \r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(238,238,238,1)\",\r\n    marginTop:0,\r\n    width:\"100%\"\r\n  },\r\n  newleadslist: {\r\n    width: 393,\r\n    height: 82,\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    marginTop: 0,\r\n    width:\"100%\",\r\n  },\r\n  leadname: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    fontSize: 18,\r\n    width:175\r\n  },\r\n  time: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    width: 75,\r\n    fontSize: 18,\r\n    marginLeft: 125,\r\n    textAlign:'justify',\r\n    justifyContent:'flex-end',\r\n  },\r\n  leadnameRow: {\r\n    height: 27,\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    marginLeft: 21,\r\n    marginRight: 41,\r\n    width:'100%'\r\n  },\r\n  location: {\r\n    color: \"rgba(167,79,79,1)\",\r\n    height: 27,\r\n    width: 196,\r\n    fontSize: 18,\r\n    marginTop: 1\r\n  },\r\n  date: {\r\n    color: \"#121212\",\r\n    height: 27,\r\n    width: 90,\r\n    fontSize: 18,\r\n    marginLeft: 72\r\n  },\r\n  locationRow: {\r\n    height: 28,\r\n    flexDirection: \"row\",\r\n    marginTop: 4,\r\n    marginLeft: 21,\r\n    marginRight: 26,\r\n    width:'100%'\r\n  },\r\n  ellipse: {\r\n    top: 0,\r\n    left: 0,\r\n    width: 100,\r\n    height: 100,\r\n    position: \"absolute\"\r\n  },\r\n  image: {\r\n    top: 23,\r\n    left: 23,\r\n    width: 70,\r\n    height: 69,\r\n    position: \"absolute\"\r\n  },\r\n  ellipseStack: {\r\n    width: 100,\r\n    height: 100,\r\n    marginTop: \"140%\",\r\n    marginLeft: 280,\r\n    position:'absolute'\r\n  }\r\n});\r\n\r\nexport default NewLeads;\r\n"]},"metadata":{},"sourceType":"module"}