{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\loginScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\nimport { Picker } from '@react-native-picker/picker';\nimport * as firebase from 'firebase';\nimport db from \"../config\";\nimport cache from \"../cache\";\n\nvar checkPassword = function checkPassword(str) {\n  var re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n  return re.test(str);\n};\n\nvar checkemail = function checkemail(str) {\n  var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return re.test(str);\n};\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var pressy = function pressy() {\n    setIsSecureEntry(function (prev) {\n      return !prev;\n    });\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedUser = _useState2[0],\n      setSelectedUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailValid = _useState4[0],\n      setemailIsValid = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      emailValidationMsg = _useState6[0],\n      setemailValidationMsg = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordValidationMsg = _useState8[0],\n      setPasswordValidationMsg = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordIsValid = _useState10[0],\n      setPasswordIsValid = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isSecureEntry = _useState12[0],\n      setIsSecureEntry = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setemail = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var isemailValid = function isemailValid(text) {\n    if (!checkemail(text)) return false;\n    return true;\n  };\n\n  var isPasswordvalid = function isPasswordvalid(text) {\n    if (!checkPassword(text)) return false;\n    return true;\n  };\n\n  var UserLogin = function UserLogin() {\n    var result, querySnap, _querySnap, errorMessage;\n\n    return _regeneratorRuntime.async(function UserLogin$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(email || password)) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 4:\n            result = _context3.sent;\n\n            if (selectedUser == \"ServiceProvider\") {\n              querySnap = db.collection(\"serviceprovider\").doc(email);\n              querySnap.get().then(function _callee(doc) {\n                var user, name;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (doc.exists) {\n                          user = doc.data();\n                          cache.store('user', user);\n                          name = doc.data().name;\n\n                          if (name === \"\") {\n                            navigation.navigate('ServiceProviderreg');\n                          } else {\n                            navigation.navigate('NewLead');\n                          }\n                        } else {\n                          Alert.alert(\"Invalid Account Type Selected\");\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            } else {\n              _querySnap = db.collection(\"serviceseeker\").doc(email);\n\n              _querySnap.get().then(function _callee2(doc) {\n                var user, name;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (doc.exists) {\n                          user = doc.data();\n                          cache.store('user', user);\n                          name = doc.data().name;\n                          console.log(\"Document name:\", doc.data().name);\n\n                          if (name === \"\") {\n                            navigation.navigate('ServiceSeekerreg');\n                          } else {\n                            navigation.navigate('Categories');\n                          }\n                        } else {\n                          Alert.alert(\"Invalid Account Type Selected\");\n                        }\n\n                      case 1:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            }\n\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            errorMessage = _context3.t0.message;\n            Alert.alert(errorMessage);\n\n          case 12:\n            _context3.next = 16;\n            break;\n\n          case 14:\n            if (!isemailValid(email)) {\n              setemailIsValid(false);\n              setemailValidationMsg(\"Please enter a valid email address\");\n            } else {\n              setemailValidationMsg(\"\");\n              setemailIsValid(true);\n            }\n\n            if (!isPasswordvalid(password)) {\n              setPasswordIsValid(false);\n              setPasswordValidationMsg(\"Must be 6 Char long and use combinations\");\n            } else {\n              setPasswordValidationMsg(\"\");\n              setPasswordIsValid(true);\n            }\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.image4Stack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/Ellipse_1.png\"),\n    resizeMode: \"contain\",\n    style: styles.image4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/images/Ellipse_2.png\"),\n    resizeMode: \"contain\",\n    style: styles.image5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.imageRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/login.png\"),\n    resizeMode: \"contain\",\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/images/maintainence.png\"),\n    resizeMode: \"contain\",\n    style: styles.image2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })), React.createElement(TextInput, {\n    placeholder: \"  Email address\",\n    placeholderTextColor: \"rgba(203,194,194,1)\",\n    style: styles.emailNumber,\n    onChangeText: function onChangeText(text) {\n      return setemail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, !emailValid && React.createElement(Text, {\n    style: {\n      marginLeft: 88,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, emailValidationMsg)), React.createElement(Picker, {\n    style: styles.accounttype,\n    selectedValue: selectedUser,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedUser(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Account Type\",\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Service Seeker\",\n    value: \"ServiceSeeker\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Service Provider\",\n    value: \"ServiceProvider\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  })), React.createElement(Text, {\n    onPress: function onPress() {\n      return pressy();\n    },\n    style: {\n      marginLeft: 260,\n      marginBottom: 0,\n      marginTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, isSecureEntry ? 'Show' : 'Hide'), React.createElement(TextInput, {\n    placeholder: \"  Password\",\n    placeholderTextColor: \"rgba(203,194,194,1)\",\n    style: styles.password,\n    numberOfLines: 1,\n    secureTextEntry: isSecureEntry,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 6\n    }\n  }, !passwordIsValid && React.createElement(Text, {\n    style: {\n      marginLeft: 88,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }\n  }, passwordValidationMsg)), React.createElement(Text, {\n    style: {\n      color: \"rgba(196,196,196,1)\",\n      fontSize: 16,\n      marginTop: 4,\n      marginLeft: 140\n    },\n    onPress: function onPress() {\n      navigation.navigate('Changepassword');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, \"Forgot Password\"), React.createElement(Text, {\n    style: styles.bottomline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"Don't have an account?\"), React.createElement(Text, {\n    style: styles.Register,\n    onPress: function onPress() {\n      navigation.navigate(\"Registration\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Register\"), React.createElement(MaterialButtonLight, {\n    style: styles.materialButtonLight,\n    click: UserLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, \"Login\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderWidth: 0,\n    borderColor: \"rgba(235,223,223,1)\",\n    backgroundColor: \"rgba(255,255,255,1)\",\n    width: '100%'\n  },\n  image: {\n    width: '60%',\n    height: 200\n  },\n  image2: {\n    width: \"40%\",\n    height: 117,\n    marginTop: 41\n  },\n  imageRow: {\n    height: 200,\n    flexDirection: \"row\",\n    marginTop: -30,\n    marginLeft: 25,\n    marginRight: 42\n  },\n  emailNumber: {\n    color: \"#121212\",\n    height: 45,\n    width: \"60%\",\n    backgroundColor: \"rgba(255,251,251,0.74)\",\n    marginTop: 23,\n    alignSelf: \"center\"\n  },\n  accounttype: {\n    position: \"absolute\",\n    height: 45,\n    width: \"60%\",\n    backgroundColor: \"rgba(255,251,251,1)\",\n    alignContent: 'center',\n    top: 0,\n    left: 78,\n    color: '#b3afaf',\n    marginTop: 430\n  },\n  image3: {\n    top: 19,\n    left: 201,\n    width: 22,\n    height: 10,\n    position: \"absolute\"\n  },\n  caption: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  password: {\n    color: \"#121212\",\n    height: 45,\n    width: \"60%\",\n    backgroundColor: \"rgba(255,251,251,1)\",\n    marginTop: 5,\n    alignSelf: \"center\"\n  },\n  materialButtonLight: {\n    height: 40,\n    width: \"60%\",\n    borderRadius: 20,\n    marginTop: 14,\n    marginLeft: 85\n  },\n  image4: {\n    marginTop: -30,\n    left: -25,\n    width: 200,\n    height: 200,\n    position: \"absolute\"\n  },\n  image5: {\n    top: -20,\n    marginLeft: 110,\n    width: 200,\n    height: 200,\n    position: \"absolute\"\n  },\n  image4Stack: {\n    width: 336,\n    height: 210,\n    marginTop: -42,\n    marginLeft: -40\n  },\n  Register: {\n    color: \"rgba(196,196,196,1)\",\n    fontSize: 15,\n    marginLeft: 251,\n    marginTop: -20\n  },\n  bottomline: {\n    color: '#000000',\n    marginLeft: 90,\n    fontSize: 15,\n    marginTop: 3\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/marketsite/screens/loginScreen.js"],"names":["React","useState","MaterialButtonLight","Picker","firebase","db","cache","checkPassword","str","re","test","checkemail","Login","navigation","pressy","setIsSecureEntry","prev","selectedUser","setSelectedUser","emailValid","setemailIsValid","emailValidationMsg","setemailValidationMsg","passwordValidationMsg","setPasswordValidationMsg","passwordIsValid","setPasswordIsValid","isSecureEntry","email","setemail","password","setPassword","isemailValid","text","isPasswordvalid","UserLogin","auth","signInWithEmailAndPassword","result","querySnap","collection","doc","get","then","exists","user","data","store","name","navigate","Alert","alert","console","log","errorMessage","message","Keyboard","dismiss","styles","container","image4Stack","require","image4","image5","imageRow","image","image2","emailNumber","height","marginLeft","color","accounttype","itemValue","itemIndex","marginBottom","marginTop","fontSize","bottomline","Register","materialButtonLight","caption","StyleSheet","create","flex","borderWidth","borderColor","backgroundColor","width","flexDirection","marginRight","alignSelf","position","alignContent","top","left","image3","fontWeight","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Image,Text, TextInput ,ScrollView,TouchableWithoutFeedback,Keyboard,Alert,KeyboardAvoidingView} from \"react-native\";\r\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport * as firebase from 'firebase';\r\nimport db from '../config';\r\nimport cache from '../cache';\r\n\r\nconst checkPassword = (str) =>\r\n{\r\n    var re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\r\n    return re.test(str)\r\n}\r\n\r\nconst checkemail = (str) =>\r\n{\r\n  const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return re.test(str)\r\n}\r\n\r\nconst Login = ({navigation}) => {\r\n\r\n    const pressy =\r\n    ()=>{\r\n      setIsSecureEntry((prev) => !prev);\r\n    }\r\n\r\n     const [selectedUser, setSelectedUser] = useState();\r\n\r\n  const [emailValid,setemailIsValid] = useState(false)\r\n  const [emailValidationMsg, setemailValidationMsg] = useState(\"\")\r\n  const [passwordValidationMsg, setPasswordValidationMsg] = useState(\"\")\r\n  const [passwordIsValid,setPasswordIsValid] = useState(false)\r\n  const [isSecureEntry,setIsSecureEntry] = useState(true)\r\n\r\n  const [email, setemail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const isemailValid = text =>{\r\n    if(!checkemail(text)) return false;\r\n    return true;\r\n  }\r\n\r\n  const isPasswordvalid = text =>{\r\n    if(!checkPassword(text)) return false;\r\n    return true;\r\n  }\r\n\r\n \r\n  \r\n  const UserLogin = async() =>{\r\n    if(email || password ){\r\n      try {\r\n        const result = await firebase.auth().signInWithEmailAndPassword(email,password);\r\n            \r\n         if (selectedUser == \"ServiceProvider\") {\r\n          const querySnap =  db.collection(\"serviceprovider\").doc(email);\r\n          querySnap.get().then(async (doc) => {\r\n            if (doc.exists) {             \r\n              const user = doc.data();\r\n              cache.store('user', user)                    \r\n                    var name = doc.data().name\r\n                  if (name ===\"\"){     \r\n                    navigation.navigate('ServiceProviderreg')            \r\n                      }else{           \r\n                      navigation.navigate('NewLead')\r\n                  }\r\n            }else{\r\n              Alert.alert(\"Invalid Account Type Selected\")\r\n            }\r\n          });\r\n          //var myTimestamp = firebase.firestore.Timestamp.fromDate(new Date());\r\n          \r\n          \r\n        } else {\r\n          const querySnap =  db.collection(\"serviceseeker\").doc(email)\r\n          querySnap.get().then( async (doc) => {\r\n            if (doc.exists) {\r\n              const user = doc.data()\r\n              cache.store('user', user)\r\n              var name = doc.data().name\r\n              console.log(\"Document name:\", doc.data().name)\r\n            if (name ===\"\"){     \r\n              navigation.navigate('ServiceSeekerreg')           \r\n                }else{           \r\n                  navigation.navigate('Categories')\r\n                }\r\n            }else{\r\n              Alert.alert(\"Invalid Account Type Selected\")\r\n              }\r\n        });\r\n        \r\n        \r\n      }\r\n      } catch (error) {\r\n        var errorMessage = error.message\r\n        Alert.alert(errorMessage)\r\n      }\r\n    }else{\r\n      if(!isemailValid(email)){\r\n        setemailIsValid(false)\r\n        setemailValidationMsg(\"Please enter a valid email address\")\r\n    }\r\n      else {\r\n        setemailValidationMsg(\"\")\r\n        setemailIsValid(true)\r\n        \r\n      }\r\n      if(!isPasswordvalid(password)){\r\n        setPasswordIsValid(false);\r\n        setPasswordValidationMsg(\"Must be 6 Char long and use combinations\")\r\n    }\r\n      else {\r\n        setPasswordValidationMsg(\"\")\r\n        setPasswordIsValid(true)\r\n        \r\n      }\r\n    }\r\n     \r\n    }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress = { () =>{\r\n      Keyboard.dismiss();\r\n   } } >\r\n    <ScrollView style={styles.container}>\r\n       <View style={styles.image4Stack}>\r\n        <Image\r\n          source={require(\"../assets/images/Ellipse_1.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image4}\r\n        ></Image>\r\n        <Image\r\n          source={require(\"../assets/images/Ellipse_2.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image5}\r\n        ></Image>\r\n      </View>\r\n      <View style={styles.imageRow}>\r\n        <Image\r\n          source={require(\"../assets/images/login.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image}\r\n        ></Image>\r\n        <Image\r\n          source={require(\"../assets/images/maintainence.png\")}\r\n          resizeMode=\"contain\"\r\n          style={styles.image2}\r\n        ></Image>\r\n      </View>\r\n      <TextInput\r\n        placeholder=\"  Email address\"\r\n        placeholderTextColor=\"rgba(203,194,194,1)\"\r\n        style={styles.emailNumber} \r\n        onChangeText={text => setemail(text)}\r\n      ></TextInput>\r\n      <View style={{height:20}}>\r\n      {!emailValid && <Text style={{marginLeft:88,color:'red'}}>{emailValidationMsg}</Text>} \r\n        </View> \r\n      <Picker style={styles.accounttype} selectedValue={selectedUser} onValueChange={(itemValue,itemIndex)=>\r\n      setSelectedUser(itemValue)}>\r\n      <Picker.Item  label=\"Account Type\" value=\"0\"/>\r\n      <Picker.Item label=\"Service Seeker\" value=\"ServiceSeeker\"/>\r\n      <Picker.Item label=\"Service Provider\" value=\"ServiceProvider\" / > \r\n      </Picker>\r\n      <Text onPress={()=> pressy()} style={{marginLeft:260, marginBottom:0,marginTop:50}}\r\n      >{isSecureEntry ? 'Show' : 'Hide'}</Text>\r\n      <TextInput\r\n        placeholder=\"  Password\"\r\n        placeholderTextColor=\"rgba(203,194,194,1)\"\r\n        style={styles.password} numberOfLines={1}\r\n        secureTextEntry={isSecureEntry} \r\n        onChangeText={text => setPassword(text)}\r\n      ></TextInput>\r\n     <View style={{height:20}}>\r\n     {!passwordIsValid && <Text style={{marginLeft:88,color:'red'}}>{passwordValidationMsg}</Text>} \r\n      </View>\r\n      <Text style={{color: \"rgba(196,196,196,1)\",fontSize: 16,marginTop: 4,marginLeft: 140}} onPress={() => {\r\n            navigation.navigate('Changepassword');\r\n          }}>Forgot Password</Text>\r\n      <Text style={styles.bottomline}>Don't have an account?</Text>\r\n      <Text style={styles.Register} onPress={() => {\r\n            navigation.navigate(\"Registration\");\r\n          }}>Register</Text>\r\n      <MaterialButtonLight\r\n        style={styles.materialButtonLight} click={UserLogin}\r\n      ><Text style={styles.caption}>Login</Text></MaterialButtonLight>\r\n    </ScrollView></TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    borderWidth: 0,\r\n    borderColor: \"rgba(235,223,223,1)\",\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    width:'100%',\r\n  },\r\n  image: {\r\n    width: '60%',\r\n    height: 200\r\n  },\r\n  image2: {\r\n    width: \"40%\",\r\n    height: 117,\r\n    marginTop: 41\r\n  },\r\n  imageRow: {\r\n    height: 200,\r\n    flexDirection: \"row\",\r\n    marginTop: -30,\r\n    marginLeft: 25,\r\n    marginRight: 42\r\n  },\r\n  emailNumber: {\r\n    color: \"#121212\",\r\n    height: 45,\r\n    width: \"60%\",\r\n    backgroundColor: \"rgba(255,251,251,0.74)\",\r\n    marginTop: 23,\r\n    alignSelf: \"center\",\r\n  },\r\n  accounttype: {\r\n    position: \"absolute\",\r\n    height: 45,\r\n    width: \"60%\",\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    alignContent:'center',\r\n    top: 0,\r\n    left:78,\r\n    color:'#b3afaf',\r\n     marginTop:430,\r\n  },\r\n  image3: {\r\n    top: 19,\r\n    left: 201,\r\n    width: 22,\r\n    height: 10,\r\n    position: \"absolute\"\r\n  },\r\n  caption: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n    fontWeight:'bold',\r\n  },\r\n  password: {\r\n    color: \"#121212\",\r\n    height: 45,\r\n    width: \"60%\",\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    marginTop: 5,\r\n    alignSelf: \"center\"\r\n  },\r\n  materialButtonLight: {\r\n    height: 40,\r\n    width: \"60%\",\r\n    borderRadius: 20,\r\n    marginTop: 14,\r\n    marginLeft: 85\r\n  },\r\n  image4: {\r\n    marginTop: -30,\r\n    left: -25,\r\n    width: 200,\r\n    height: 200,\r\n    position: \"absolute\"\r\n  },\r\n  image5: {\r\n    top: -20,\r\n    marginLeft: 110,\r\n    width: 200,\r\n    height: 200,\r\n    position: \"absolute\"\r\n  },\r\n  image4Stack: {\r\n    width: 336,\r\n    height: 210,\r\n    marginTop: -42,\r\n    marginLeft: -40\r\n  },\r\n  Register: {\r\n    color: \"rgba(196,196,196,1)\",\r\n    fontSize: 15,\r\n    marginLeft: 251,marginTop:-20\r\n  },\r\n  bottomline:{color:'#000000',\r\n  marginLeft:90,\r\n  fontSize: 15,marginTop:3}\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}