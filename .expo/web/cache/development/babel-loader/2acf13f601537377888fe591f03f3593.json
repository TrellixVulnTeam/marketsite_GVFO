{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\MyBookingsScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar Mybookings = function Mybookings(_ref) {\n  var navigation = _ref.navigation;\n\n  var renderGridItem = function renderGridItem(itemData) {\n    var unixtimestamp = itemData.item.date_time.seconds;\n    var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var date = new Date(unixtimestamp * 1000);\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var convdataTime = month + '-' + day + '-' + year + ' at ' + hours + ':' + minutes.substr(-2);\n\n    var getDetail = function getDetail() {\n      navigation.navigate('BookingDetail', {\n        details: {\n          Booking_Time: convdataTime,\n          category_name: itemData.item.category_name,\n          BookingAddress: itemData.item.AddressData.address,\n          BookingArea: itemData.item.AddressData.area,\n          BookingCity: itemData.item.AddressData.city,\n          BookingPincode: itemData.item.AddressData.pincode,\n          slotTime: itemData.item.BookingTime,\n          slotDate: itemData.item.Booking_Date,\n          serviceprovidername: itemData.item.serviceprovider_name,\n          Booking_id: itemData.item.Booking_id,\n          serviceProviderid: itemData.item.Service_Provider_id,\n          serviceId: itemData.item.Service_id\n        }\n      });\n    };\n\n    return React.createElement(TouchableOpacity, {\n      style: styles.list1,\n      onPress: function onPress() {\n        getDetail();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      style: styles.listname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, itemData.item.category_name), React.createElement(Text, {\n      style: styles.timeanddate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, convdataTime));\n  };\n\n  var result = [];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      booking = _useState4[0],\n      setBooking = _useState4[1];\n\n  var email = firebase.auth().currentUser.email;\n\n  var getBooking = function getBooking() {\n    return _regeneratorRuntime.async(function getBooking$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection(\"booking\").doc(email).collection(email).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                result.push(doc.data());\n              });\n            }));\n\n          case 2:\n            setBooking(result);\n            setLoading(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useFocusEffect(function () {\n    getBooking();\n  });\n  if (loading) return null;\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.Booking_id;\n    },\n    data: booking,\n    renderItem: renderGridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(238,238,238,1)\",\n    marginTop: 30\n  },\n  list1: {\n    width: 395,\n    height: 63,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    marginTop: 5\n  },\n  listname: {\n    color: \"#121212\",\n    height: 29,\n    width: 143,\n    fontSize: 17,\n    marginTop: 6,\n    marginLeft: 11,\n    fontWeight: 'bold'\n  },\n  timeanddate: {\n    color: \"#121212\",\n    marginTop: 0,\n    marginLeft: 11\n  },\n  button: {\n    top: 0,\n    left: 0,\n    width: 96,\n    height: 78,\n    position: \"absolute\",\n    backgroundColor: \"#E6E6E6\"\n  },\n  home: {\n    top: 0,\n    left: 3,\n    width: 96,\n    height: 78,\n    position: \"absolute\",\n    backgroundColor: \"#E6E6E6\"\n  },\n  buttonStack: {\n    width: 99,\n    height: 78,\n    marginTop: 526,\n    marginLeft: 6\n  }\n});\nexport default Mybookings;","map":{"version":3,"sources":["D:/marketsite/screens/MyBookingsScreen.js"],"names":["React","useState","useFocusEffect","firebase","db","Mybookings","navigation","renderGridItem","itemData","unixtimestamp","item","date_time","seconds","months_arr","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","convdataTime","substr","getDetail","navigate","details","Booking_Time","category_name","BookingAddress","AddressData","address","BookingArea","area","BookingCity","city","BookingPincode","pincode","slotTime","BookingTime","slotDate","Booking_Date","serviceprovidername","serviceprovider_name","Booking_id","serviceProviderid","Service_Provider_id","serviceId","Service_id","styles","list1","listname","timeanddate","result","loading","setLoading","booking","setBooking","email","auth","currentUser","getBooking","collection","doc","get","then","querySnapshot","forEach","push","data","container","StyleSheet","create","flex","backgroundColor","marginTop","width","height","color","fontSize","marginLeft","fontWeight","button","top","left","position","home","buttonStack"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,EAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiB;AAAA,MAAfC,UAAe,QAAfA,UAAe;;AAElC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAa;AAGlC,QAAIC,aAAa,GAAED,QAAQ,CAACE,IAAT,CAAcC,SAAd,CAAwBC,OAA3C;AAEA,QAAIC,UAAU,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,CAAjB;AAEA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASN,aAAa,GAAC,IAAvB,CAAX;AAEA,QAAIO,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX;AAEA,QAAIC,KAAK,GAAGL,UAAU,CAACC,IAAI,CAACK,QAAL,EAAD,CAAtB;AAEA,QAAIC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAV;AAEA,QAAIC,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAZ;AAGA,QAAIC,OAAO,GAAG,MAAMV,IAAI,CAACW,UAAL,EAApB;AAGA,QAAIC,YAAY,GAAGR,KAAK,GAAC,GAAN,GAAUE,GAAV,GAAc,GAAd,GAAkBJ,IAAlB,GAAuB,MAAvB,GAA8BM,KAA9B,GAAsC,GAAtC,GAA4CE,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,CAA/D;;AACA,QAAMC,SAAS,GAAC,SAAVA,SAAU,GAAI;AAClBtB,MAAAA,UAAU,CAACuB,QAAX,CAAoB,eAApB,EAAoC;AAClCC,QAAAA,OAAO,EAAC;AACNC,UAAAA,YAAY,EAACL,YADP;AAENM,UAAAA,aAAa,EAACxB,QAAQ,CAACE,IAAT,CAAcsB,aAFtB;AAGNC,UAAAA,cAAc,EAAEzB,QAAQ,CAACE,IAAT,CAAcwB,WAAd,CAA0BC,OAHpC;AAINC,UAAAA,WAAW,EAAE5B,QAAQ,CAACE,IAAT,CAAcwB,WAAd,CAA0BG,IAJjC;AAKNC,UAAAA,WAAW,EAAC9B,QAAQ,CAACE,IAAT,CAAcwB,WAAd,CAA0BK,IALhC;AAMNC,UAAAA,cAAc,EAAChC,QAAQ,CAACE,IAAT,CAAcwB,WAAd,CAA0BO,OANnC;AAONC,UAAAA,QAAQ,EAAClC,QAAQ,CAACE,IAAT,CAAciC,WAPjB;AAQNC,UAAAA,QAAQ,EAACpC,QAAQ,CAACE,IAAT,CAAcmC,YARjB;AASNC,UAAAA,mBAAmB,EAACtC,QAAQ,CAACE,IAAT,CAAcqC,oBAT5B;AAUNC,UAAAA,UAAU,EAACxC,QAAQ,CAACE,IAAT,CAAcsC,UAVnB;AAWNC,UAAAA,iBAAiB,EAACzC,QAAQ,CAACE,IAAT,CAAcwC,mBAX1B;AAYNC,UAAAA,SAAS,EAAC3C,QAAQ,CAACE,IAAT,CAAc0C;AAZlB;AAD0B,OAApC;AAgBD,KAjBD;;AAmBA,WAAO,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,KAAhC;AAAuC,MAAA,OAAO,EAAE,mBAAM;AAC3D1B,QAAAA,SAAS;AACV,OAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGD,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEyB,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B/C,QAAQ,CAACE,IAAT,CAAcsB,aAA7C,CAHC,EAID,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEqB,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC9B,YAAlC,CAJC,CAAP;AAMD,GA/CD;;AAiDA,MAAM+B,MAAM,GAAG,EAAf;;AAnDkC,kBAoDJxD,QAAQ,CAAC,IAAD,CApDJ;AAAA;AAAA,MAoD3ByD,OApD2B;AAAA,MAoDlBC,UApDkB;;AAAA,mBAqDJ1D,QAAQ,CAAC,EAAD,CArDJ;AAAA;AAAA,MAqD3B2D,OArD2B;AAAA,MAqDlBC,UArDkB;;AAsDlC,MAAMC,KAAK,GAAC3D,QAAQ,CAAC4D,IAAT,GAAgBC,WAAhB,CAA4BF,KAAxC;;AACA,MAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACX7D,EAAE,CAAC8D,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BL,KAA7B,EAAoCI,UAApC,CAA+CJ,KAA/C,EAAsDM,GAAtD,GAA4DC,IAA5D,CAAiE,UAACC,aAAD,EAAmB;AACxFA,cAAAA,aAAa,CAACC,OAAd,CAAsB,UAACJ,GAAD,EAAS;AAC3BV,gBAAAA,MAAM,CAACe,IAAP,CAAYL,GAAG,CAACM,IAAJ,EAAZ;AACH,eAFD;AAGH,aAJO,CADW;;AAAA;AAMnBZ,YAAAA,UAAU,CAACJ,MAAD,CAAV;AACAE,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAUAzD,EAAAA,cAAc,CAAC,YAAI;AACjB+D,IAAAA,UAAU;AACX,GAFa,CAAd;AAIA,MAAGP,OAAH,EAAY,OAAO,IAAP;AACZ,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEL,MAAM,CAACqB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACA,IAAA,YAAY,EAAE,sBAAChE,IAAD;AAAA,aAAUA,IAAI,CAACsC,UAAf;AAAA,KADd;AAEA,IAAA,IAAI,EAAEY,OAFN;AAGA,IAAA,UAAU,EAAErD,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAQD,CA9ED;;AAgFA,IAAM8C,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,qBAFR;AAGTC,IAAAA,SAAS,EAAC;AAHD,GADoB;AAM/BzB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLH,IAAAA,eAAe,EAAE,qBAHZ;AAILC,IAAAA,SAAS,EAAE;AAJN,GANwB;AAY/BxB,EAAAA,QAAQ,EAAE;AACR2B,IAAAA,KAAK,EAAE,SADC;AAERD,IAAAA,MAAM,EAAE,EAFA;AAGRD,IAAAA,KAAK,EAAE,GAHC;AAIRG,IAAAA,QAAQ,EAAE,EAJF;AAKRJ,IAAAA,SAAS,EAAE,CALH;AAMRK,IAAAA,UAAU,EAAE,EANJ;AAORC,IAAAA,UAAU,EAAC;AAPH,GAZqB;AAqB/B7B,EAAAA,WAAW,EAAE;AACX0B,IAAAA,KAAK,EAAE,SADI;AAEXH,IAAAA,SAAS,EAAE,CAFA;AAGXK,IAAAA,UAAU,EAAE;AAHD,GArBkB;AA0B/BE,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,CADC;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNR,IAAAA,KAAK,EAAE,EAHD;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNQ,IAAAA,QAAQ,EAAE,UALJ;AAMNX,IAAAA,eAAe,EAAE;AANX,GA1BuB;AAkC/BY,EAAAA,IAAI,EAAE;AACJH,IAAAA,GAAG,EAAE,CADD;AAEJC,IAAAA,IAAI,EAAE,CAFF;AAGJR,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJQ,IAAAA,QAAQ,EAAE,UALN;AAMJX,IAAAA,eAAe,EAAE;AANb,GAlCyB;AA0C/Ba,EAAAA,WAAW,EAAE;AACXX,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXF,IAAAA,SAAS,EAAE,GAHA;AAIXK,IAAAA,UAAU,EAAE;AAJD;AA1CkB,CAAlB,CAAf;AAkDA,eAAe/E,UAAf","sourcesContent":["import React, { useState} from \"react\";\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { StyleSheet, TouchableOpacity, Text,FlatList, SafeAreaView } from \"react-native\";\r\nimport * as firebase from 'firebase';\r\nimport db from '../config';\r\n\r\n\r\nconst Mybookings = ({navigation}) =>{\r\n  \r\n  const renderGridItem = (itemData) =>{\r\n\r\n    //converting timestamp from seconds to Standard Time\r\n    var unixtimestamp =itemData.item.date_time.seconds;\r\n    // Months array\r\n    var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    // Convert timestamp to milliseconds\r\n    var date = new Date(unixtimestamp*1000);\r\n    // Year\r\n    var year = date.getFullYear();\r\n    // Month\r\n    var month = months_arr[date.getMonth()];\r\n    // Day\r\n    var day = date.getDate();\r\n    // Hours\r\n    var hours = date.getHours();\r\n   \r\n    // Minutes\r\n    var minutes = \"0\" + date.getMinutes();\r\n   \r\n    // Display date time in MM-dd-yyyy h:m:s format\r\n    var convdataTime = month+'-'+day+'-'+year+' at '+hours + ':' + minutes.substr(-2);\r\n    const getDetail=()=>{\r\n      navigation.navigate('BookingDetail',{\r\n        details:{\r\n          Booking_Time:convdataTime,\r\n          category_name:itemData.item.category_name,\r\n          BookingAddress: itemData.item.AddressData.address,\r\n          BookingArea: itemData.item.AddressData.area,\r\n          BookingCity:itemData.item.AddressData.city,\r\n          BookingPincode:itemData.item.AddressData.pincode,\r\n          slotTime:itemData.item.BookingTime,\r\n          slotDate:itemData.item.Booking_Date,\r\n          serviceprovidername:itemData.item.serviceprovider_name,\r\n          Booking_id:itemData.item.Booking_id,\r\n          serviceProviderid:itemData.item.Service_Provider_id,\r\n          serviceId:itemData.item.Service_id,\r\n        }\r\n      });\r\n    }\r\n\r\n    return <TouchableOpacity style={styles.list1} onPress={() => {\r\n      getDetail();\r\n    }}>\r\n          <Text style={styles.listname}>{itemData.item.category_name}</Text>\r\n          <Text style={styles.timeanddate}>{convdataTime}</Text>\r\n        </TouchableOpacity>\r\n  }\r\n\r\n  const result = []\r\n  const [loading, setLoading] = useState(true);\r\n  const [booking, setBooking] = useState([]);\r\n  const email=firebase.auth().currentUser.email;\r\n  const getBooking = async () => {\r\n    await db.collection(\"booking\").doc(email).collection(email).get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n          result.push(doc.data());\r\n      });\r\n  });\r\n  setBooking(result);\r\n  setLoading(false);\r\n  }\r\n\r\n  useFocusEffect(()=>{\r\n    getBooking();\r\n  })\r\n\r\n  if(loading) return null\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n    <FlatList\r\n    keyExtractor={(item) => item.Booking_id}\r\n    data={booking} \r\n    renderItem={renderGridItem} \r\n    /></SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(238,238,238,1)\",\r\n    marginTop:30\r\n  },\r\n  list1: {\r\n    width: 395,\r\n    height: 63,\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    marginTop: 5\r\n  },\r\n  listname: {\r\n    color: \"#121212\",\r\n    height: 29,\r\n    width: 143,\r\n    fontSize: 17,\r\n    marginTop: 6,\r\n    marginLeft: 11,\r\n    fontWeight:'bold',\r\n  },\r\n  timeanddate: {\r\n    color: \"#121212\",\r\n    marginTop: 0,\r\n    marginLeft: 11\r\n  },\r\n  button: {\r\n    top: 0,\r\n    left: 0,\r\n    width: 96,\r\n    height: 78,\r\n    position: \"absolute\",\r\n    backgroundColor: \"#E6E6E6\"\r\n  },\r\n  home: {\r\n    top: 0,\r\n    left: 3,\r\n    width: 96,\r\n    height: 78,\r\n    position: \"absolute\",\r\n    backgroundColor: \"#E6E6E6\"\r\n  },\r\n  buttonStack: {\r\n    width: 99,\r\n    height: 78,\r\n    marginTop: 526,\r\n    marginLeft: 6\r\n  }\r\n});\r\n\r\nexport default Mybookings;\r\n"]},"metadata":{},"sourceType":"module"}