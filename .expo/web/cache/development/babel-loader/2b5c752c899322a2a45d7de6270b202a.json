{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\ScheduleSlot.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\nimport { Picker } from '@react-native-picker/picker';\nimport * as firebase from 'firebase';\nimport db from \"../config\";\nimport cache from \"../cache\";\nvar booking_id;\n\nvar getNextFiveDay = function getNextFiveDay() {\n  var today = new Date();\n  var nextFiveDay = [];\n\n  for (var i = 0; i < 5; i++) {\n    var day = new Date(today.getFullYear(), today.getMonth(), today.getDate() + i).toDateString().split(\" \");\n    nextFiveDay.push(day);\n  }\n\n  return nextFiveDay;\n};\n\nvar Button = function Button(props) {\n  var setActiveButton = props.setActiveButton,\n      id = props.id,\n      active = props.active,\n      slot = props.slot,\n      fetch = props.fetch;\n\n  var clickHandler = function clickHandler() {\n    setActiveButton(id);\n    fetch(slot);\n  };\n\n  var touchProps = {\n    activeOpacity: 1,\n    underlayColor: '#c4c4c4',\n    style: active ? styles.ts1Press : styles.ts1\n  };\n  return React.createElement(TouchableOpacity, _extends({}, touchProps, {\n    onPress: clickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }\n  }), React.createElement(Text, {\n    style: styles.ts1text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }\n  }, slot[0], '\\n', slot[2]));\n};\n\nvar nextFiveDay = getNextFiveDay();\n\nvar ScheduleSlot = function ScheduleSlot(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeButton = _useState2[0],\n      setActiveButton = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addressValid = _useState4[0],\n      setAddressIsValid = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addressValidationMsg = _useState6[0],\n      setAddressValidationMsg = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      slot = _useState8[0],\n      setSlot = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      times = _useState10[0],\n      settimes = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      area = _useState14[0],\n      setArea = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      pincode = _useState16[0],\n      setPincode = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      user = _useState18[0],\n      setUser = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      address = _useState20[0],\n      setAddress = _useState20[1];\n\n  var categoryTitle = route.params.details.categoryTitle;\n  var serviceprovider_email = route.params.details.serviceprovider_email;\n  var serviceprovider_name = route.params.details.serviceprovider_name;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPress = _React$useState2[0],\n      setIsPress = _React$useState2[1];\n\n  var isaddressValid = function isaddressValid(text) {\n    if (text.trim().length < 1) return false;else return true;\n  };\n\n  var fetch = function fetch(slot) {\n    setIsPress(true);\n    var Day = slot[0];\n    var Date = slot[2];\n    var Month = slot[1];\n    var Year = slot[3];\n    var bookslot = Day + \" \" + Date + \" \" + Month + \" \" + Year;\n    setSlot(bookslot);\n  };\n\n  var reg = function reg() {\n    var email, docRef, errorMessage;\n    return _regeneratorRuntime.async(function reg$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (address) {\n              _context.next = 5;\n              break;\n            }\n\n            if (!isaddressValid(address)) {\n              setAddressIsValid(false);\n              setAddressValidationMsg(\"Please enter a valid Charge\");\n            } else {\n              setAddressValidationMsg(\"\");\n              setAddressIsValid(true);\n            }\n\n            Alert.alert(\"Check Input added\");\n            _context.next = 21;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            email = firebase.auth().currentUser.email;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(db.collection(\"booking\").doc(email).collection(email).add({\n              Booking_id: \"\",\n              AddressData: {\n                address: address,\n                area: area,\n                city: city,\n                pincode: pincode\n              },\n              BookingTime: times,\n              Booking_Date: slot,\n              Consumer_id: email,\n              consumer_name: user,\n              category_name: categoryTitle,\n              Service_Provider_id: serviceprovider_email,\n              serviceprovider_name: serviceprovider_name,\n              date_time: firebase.firestore.Timestamp.fromDate(new Date()),\n              is_completed: \"\",\n              rejectionReason: \"\",\n              rejected_by: \"\",\n              rating: \"\",\n              jobStatus: \"\",\n              final_charge: \"\",\n              review: \"\"\n            }));\n\n          case 9:\n            docRef = _context.sent;\n            booking_id = docRef.id;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(db.collection(\"booking\").doc(email).collection(email).doc(booking_id).update({\n              Booking_id: booking_id\n            }));\n\n          case 13:\n            db.collection(\"service\").doc(serviceprovider_email).collection(serviceprovider_email).add({\n              Booking_id: booking_id,\n              Consumer_id: email,\n              category_name: categoryTitle,\n              Service_id: \"\",\n              final_charge: 0,\n              rating: 0\n            }).then(function (doc) {\n              var service_id = doc.id;\n              db.collection(\"service\").doc(serviceprovider_email).collection(serviceprovider_email).doc(service_id).update({\n                Service_id: doc.id\n              });\n              db.collection(\"booking\").doc(email).collection(email).doc(booking_id).update({\n                Service_id: service_id\n              });\n            });\n            navigation.navigate('BookingDone', {\n              details: {\n                BookingTime: times,\n                Booking_Date: slot,\n                category_name: categoryTitle,\n                serviceprovider_email: serviceprovider_email,\n                serviceprovider_name: serviceprovider_name\n              }\n            });\n            _context.next = 21;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](5);\n            errorMessage = _context.t0.message;\n            Alert.alert(errorMessage);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 17]], Promise);\n  };\n\n  var getUser = function getUser() {\n    var user;\n    return _regeneratorRuntime.async(function getUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(cache.get('user'));\n\n          case 2:\n            user = _context2.sent;\n            setUser(user.name);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  getUser();\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 0,\n      width: '100%',\n      height: 229,\n      backgroundColor: '#ffffff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Address\"), React.createElement(TextInput, {\n    style: styles.addressinput,\n    placeholder: \"Enter Address\",\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.addressinput,\n    placeholder: \"Area or location\",\n    onChangeText: function onChangeText(text) {\n      return setArea(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), React.createElement(Picker, {\n    style: {\n      marginLeft: 10,\n      marginTop: 10\n    },\n    selectedValue: city,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setCity(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select City\",\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Mumbai\",\n    value: \"Mumbai\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  })), React.createElement(TextInput, {\n    style: styles.addressinput,\n    placeholder: \"Enter Pincode\",\n    onChangeText: function onChangeText(text) {\n      return setPincode(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }), !addressValid && React.createElement(Text, {\n    style: {\n      marginLeft: 15,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, addressValidationMsg)), React.createElement(View, {\n    style: {\n      marginTop: 5,\n      paddingLeft: 15,\n      height: 250,\n      backgroundColor: '#ffffff',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Selectslot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Select Slot\"), React.createElement(View, {\n    style: styles.slots,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, nextFiveDay.map(function (slot, index) {\n    return React.createElement(Button, {\n      key: index,\n      slot: slot,\n      id: index,\n      setActiveButton: setActiveButton,\n      active: activeButton === index ? true : false,\n      fetch: fetch,\n      setSlot: setSlot,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 27\n      }\n    });\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.Selecttime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Select Time\"), React.createElement(Picker, {\n    style: styles.timeinput,\n    selectedValue: times,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return settimes(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select Time\",\n    value: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"8-9 AM\",\n    value: \"8-9 AM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"9-10 AM\",\n    value: \"9-10 AM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"10-11 AM\",\n    value: \"10-11 AM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"11-12 PM\",\n    value: \"11-12 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"12-1 PM\",\n    value: \"12-1 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"1-2 PM\",\n    value: \"1-2 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"2-3 PM\",\n    value: \"2-3 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"3-4 PM\",\n    value: \"3-4 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4-5 PM\",\n    value: \"4-5 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"5-6 PM\",\n    value: \"5-6 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"6-7 PM\",\n    value: \"6-7 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"7-8 PM\",\n    value: \"7-8 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"8-9 PM\",\n    value: \"8-9 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"9-10 PM\",\n    value: \"9-10 PM\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialButtonLight, {\n    style: styles.materialButtonLight,\n    click: reg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 12\n    }\n  }, \"Proceed to Pay\")))));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    width: '100%',\n    flex: 1,\n    padding: 10,\n    alignItems: 'baseline',\n    backgroundColor: \"#f0e0df\"\n  },\n  header: {\n    marginTop: 40,\n    width: '100%',\n    height: 42,\n    backgroundColor: '#ffffff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 7,\n    borderBottomColor: '#000000',\n    borderBottomWidth: .3,\n    marginBottom: 10\n  },\n  headerTitle: {\n    color: 'black',\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  address: {\n    fontSize: 20,\n    paddingTop: 15,\n    paddingLeft: 15,\n    fontWeight: \"bold\"\n  },\n  addressinput: {\n    width: '90%',\n    height: 40,\n    fontSize: 18,\n    borderBottomColor: '#000000',\n    borderBottomWidth: .5,\n    marginLeft: 15\n  },\n  slots: {\n    padding: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    height: 80,\n    paddingRight: 15\n  },\n  materialButtonLight: {\n    height: 40,\n    width: 248,\n    borderRadius: 20,\n    marginTop: -30,\n    alignSelf: \"center\"\n  },\n  ts1: {\n    width: 60,\n    height: 65,\n    borderColor: '#C4C4C4',\n    borderRadius: 10,\n    borderWidth: 1,\n    justifyContent: 'center'\n  },\n  ts1Press: {\n    width: 60,\n    height: 65,\n    borderWidth: 1,\n    borderRadius: 10,\n    backgroundColor: '#C4C4C4',\n    borderColor: '#C4C4C4',\n    justifyContent: 'center'\n  },\n  ts1text: {\n    textAlign: 'center',\n    fontSize: 15,\n    color: \"#000000\"\n  },\n  slotbutton: {\n    width: 60,\n    height: 65,\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#C4C4C4',\n    justifyContent: 'center',\n    alignItems: 'stretch'\n  },\n  Selectslot: {\n    fontSize: 20,\n    paddingBottom: 10,\n    paddingTop: 10,\n    fontWeight: \"bold\"\n  },\n  Selecttime: {\n    fontSize: 20,\n    padding: 2,\n    fontWeight: \"bold\",\n    marginTop: 10\n  },\n  timeinput: {\n    height: 50,\n    fontSize: 15,\n    marginLeft: 3,\n    borderBottomColor: '#000000',\n    borderBottomWidth: .5,\n    width: '95%'\n  },\n  proceed: {\n    height: 53,\n    width: 316,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    backgroundColor: \"#C4C4C4\"\n  },\n  proceedtext: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  buttonContainer: {\n    width: '100%',\n    paddingHorizontal: 2,\n    alignItems: 'center',\n    paddingTop: 60\n  },\n  caption: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ScheduleSlot;","map":{"version":3,"sources":["D:/marketsite/screens/ScheduleSlot.js"],"names":["React","useState","MaterialButtonLight","Picker","firebase","db","cache","booking_id","getNextFiveDay","today","Date","nextFiveDay","i","day","getFullYear","getMonth","getDate","toDateString","split","push","Button","props","setActiveButton","id","active","slot","fetch","clickHandler","touchProps","activeOpacity","underlayColor","style","styles","ts1Press","ts1","ts1text","ScheduleSlot","route","navigation","activeButton","addressValid","setAddressIsValid","addressValidationMsg","setAddressValidationMsg","setSlot","times","settimes","city","setCity","area","setArea","pincode","setPincode","user","setUser","address","setAddress","categoryTitle","params","details","serviceprovider_email","serviceprovider_name","isPress","setIsPress","isaddressValid","text","trim","length","Day","Month","Year","bookslot","reg","Alert","alert","email","auth","currentUser","collection","doc","add","Booking_id","AddressData","BookingTime","Booking_Date","Consumer_id","consumer_name","category_name","Service_Provider_id","date_time","firestore","Timestamp","fromDate","is_completed","rejectionReason","rejected_by","rating","jobStatus","final_charge","review","docRef","update","Service_id","then","service_id","navigate","errorMessage","message","getUser","get","name","Keyboard","dismiss","screen","marginTop","width","height","backgroundColor","addressinput","marginLeft","itemValue","itemIndex","color","paddingLeft","Selectslot","slots","map","index","Selecttime","timeinput","buttonContainer","materialButtonLight","caption","StyleSheet","create","flex","padding","alignItems","header","justifyContent","paddingBottom","borderBottomColor","borderBottomWidth","marginBottom","headerTitle","fontSize","fontWeight","paddingTop","flexDirection","paddingRight","borderRadius","alignSelf","borderColor","borderWidth","textAlign","slotbutton","proceed","proceedtext","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Keyboard, TouchableWithoutFeedback, Alert } from 'react-native';\r\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport * as firebase from 'firebase';\r\nimport db from '../config';\r\nimport cache from '../cache';\r\n\r\nlet booking_id;\r\nconst getNextFiveDay = () => {\r\n  var today = new Date();\r\n  const nextFiveDay = []\r\n  for (let i = 0; i < 5; i++) {\r\n    let day = new Date(today.getFullYear(), today.getMonth(), today.getDate() + i).toDateString().split(\" \");\r\n    nextFiveDay.push(day);\r\n  }\r\n  return nextFiveDay;\r\n}\r\n\r\nconst Button = (props) => {\r\n  const { setActiveButton, id, active, slot, fetch } = props;\r\n  const clickHandler = () => {\r\n    setActiveButton(id);\r\n    fetch(slot);\r\n  };\r\n\r\n  var touchProps = {\r\n    activeOpacity: 1,\r\n    underlayColor: '#c4c4c4',   \r\n    style: active ? styles.ts1Press : styles.ts1,       \r\n  };\r\n\r\n  return (\r\n<TouchableOpacity {...touchProps} onPress={clickHandler}>\r\n<Text style={styles.ts1text}>{slot[0]}{'\\n'}{slot[2]}</Text>\r\n</TouchableOpacity>\r\n\r\n  )\r\n};\r\n\r\nconst nextFiveDay = getNextFiveDay();\r\n\r\nconst ScheduleSlot = ({ route, navigation }) => {\r\n  const [activeButton, setActiveButton] = useState();\r\n\r\n\r\n  const [addressValid, setAddressIsValid] = useState(false);\r\n  const [addressValidationMsg, setAddressValidationMsg] = useState(\"\");\r\n\r\n  const [slot, setSlot] = useState();\r\n  const [times, settimes] = useState();\r\n  const [city, setCity] = useState();\r\n  const [area, setArea] = useState();\r\n  const [pincode, setPincode] = useState();\r\n  const [user, setUser] = useState();\r\n  const [address, setAddress] = useState(false);\r\n  // const [Bookingid,setBookingid] = useState(\"\");\r\n  const categoryTitle = route.params.details.categoryTitle;\r\n  const serviceprovider_email = route.params.details.serviceprovider_email;\r\n  const serviceprovider_name = route.params.details.serviceprovider_name;\r\n  var [isPress, setIsPress] = React.useState(false);\r\n\r\n\r\n  const isaddressValid = text => {\r\n    if (text.trim().length < 1) return false\r\n    else return true\r\n  }\r\n\r\n  const fetch = (slot) => {\r\n    setIsPress(true)\r\n    var Day = slot[0];\r\n    var Date = slot[2];\r\n    var Month = slot[1];\r\n    var Year = slot[3];\r\n    const bookslot = Day + \" \" + Date + \" \" + Month + \" \" + Year;\r\n    setSlot(bookslot);\r\n  }\r\n\r\n  const reg = async () => {\r\n    if (!address) {\r\n      if (!isaddressValid(address)) {\r\n        setAddressIsValid(false);\r\n        setAddressValidationMsg(\"Please enter a valid Charge\");\r\n      }\r\n      else {\r\n        setAddressValidationMsg(\"\");\r\n        setAddressIsValid(true);\r\n\r\n      }\r\n\r\n      Alert.alert(\"Check Input added\")\r\n    } else {\r\n      try {\r\n        const email = firebase.auth().currentUser.email;\r\n        const docRef = await db.collection(\"booking\").doc(email).collection(email).add({\r\n          Booking_id: \"\",\r\n          AddressData: {\r\n            address: address,\r\n            area: area,\r\n            city: city,\r\n            pincode: pincode,\r\n          },\r\n          BookingTime: times,\r\n          Booking_Date: slot,\r\n          Consumer_id: email,\r\n          consumer_name: user,\r\n          category_name: categoryTitle,\r\n          Service_Provider_id: serviceprovider_email,\r\n          serviceprovider_name: serviceprovider_name,\r\n          date_time: firebase.firestore.Timestamp.fromDate(new Date()),\r\n          is_completed: \"\",\r\n          rejectionReason: \"\",\r\n          rejected_by: \"\",\r\n          rating: \"\",\r\n          jobStatus: \"\",\r\n          final_charge: \"\",\r\n          review: \"\",\r\n        });\r\n\r\n        booking_id = docRef.id;\r\n        await db.collection(\"booking\").doc(email).collection(email).doc(booking_id).update({\r\n          Booking_id: booking_id\r\n        });\r\n\r\n\r\n\r\n        db.collection(\"service\").doc(serviceprovider_email).collection(serviceprovider_email).add({\r\n          Booking_id: booking_id,\r\n          Consumer_id: email,\r\n          category_name: categoryTitle,\r\n          Service_id: \"\",\r\n          final_charge: 0,\r\n          rating:0\r\n        })\r\n          .then(function (doc) {\r\n            var service_id = doc.id;\r\n           \r\n            db.collection(\"service\").doc(serviceprovider_email).collection(serviceprovider_email).doc(service_id).update({\r\n              Service_id: doc.id,\r\n            })\r\n            db.collection(\"booking\").doc(email).collection(email).doc(booking_id).update({\r\n              Service_id: service_id,\r\n            });\r\n          })\r\n\r\n        navigation.navigate('BookingDone', {\r\n          details: {\r\n            BookingTime: times,\r\n            Booking_Date: slot,\r\n            category_name: categoryTitle,\r\n            serviceprovider_email: serviceprovider_email,\r\n            serviceprovider_name: serviceprovider_name,\r\n          }\r\n        });\r\n\r\n      } catch (error) {\r\n        var errorMessage = error.message;\r\n        Alert.alert(errorMessage);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    const user = await cache.get('user');\r\n    setUser(user.name)\r\n  }\r\n  getUser();\r\n\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => {\r\n      Keyboard.dismiss();\r\n    }} >\r\n      <View style={styles.screen}>\r\n        <View style={{\r\n          marginTop: 0,\r\n          width: '100%',\r\n          height: 229,\r\n          backgroundColor: '#ffffff',\r\n        }}>\r\n          <Text style={styles.address}>Address</Text>\r\n          <TextInput style={styles.addressinput} placeholder='Enter Address'\r\n            onChangeText={text => setAddress(text)} />\r\n          <TextInput style={styles.addressinput} placeholder='Area or location'\r\n            onChangeText={text => setArea(text)} />\r\n          <Picker style={{ marginLeft: 10, marginTop: 10 }} selectedValue={city} onValueChange={(itemValue, itemIndex) =>\r\n            setCity(itemValue)}>\r\n            <Picker.Item label=\"Select City\" value=\"0\" />\r\n            <Picker.Item label=\"Mumbai\" value=\"Mumbai\" />\r\n          </Picker>\r\n          <TextInput style={styles.addressinput} placeholder='Enter Pincode'\r\n            onChangeText={text => setPincode(text)} />\r\n          {!addressValid && <Text style={{ marginLeft: 15, color: 'red' }}>{addressValidationMsg}</Text>}\r\n\r\n        </View>\r\n        <View style={{ marginTop: 5, paddingLeft: 15, height: 250, backgroundColor: '#ffffff', width: '100%', }}>\r\n          <Text style={styles.Selectslot}>Select Slot</Text>\r\n\r\n          <View style={styles.slots}>\r\n            {\r\n              nextFiveDay.map((slot, index) => {\r\n                return (\r\n                          <Button key={index} slot={slot} id={index} setActiveButton={setActiveButton} \r\n                          active={activeButton === index ? true : false} fetch={fetch} setSlot={setSlot}  />\r\n                      );\r\n              })\r\n            }\r\n          </View>\r\n          <View>\r\n            <Text style={styles.Selecttime}>Select Time</Text>\r\n            <Picker style={styles.timeinput} selectedValue={times} onValueChange={(itemValue, itemIndex) =>\r\n              settimes(itemValue)}>\r\n              <Picker.Item label=\"Select Time\" value=\"0\" />\r\n              <Picker.Item label=\"8-9 AM\" value=\"8-9 AM\" />\r\n              <Picker.Item label=\"9-10 AM\" value=\"9-10 AM\" />\r\n              <Picker.Item label=\"10-11 AM\" value=\"10-11 AM\" />\r\n              <Picker.Item label=\"11-12 PM\" value=\"11-12 PM\" />\r\n              <Picker.Item label=\"12-1 PM\" value=\"12-1 PM\" />\r\n              <Picker.Item label=\"1-2 PM\" value=\"1-2 PM\" />\r\n              <Picker.Item label=\"2-3 PM\" value=\"2-3 PM\" />\r\n              <Picker.Item label=\"3-4 PM\" value=\"3-4 PM\" />\r\n              <Picker.Item label=\"4-5 PM\" value=\"4-5 PM\" />\r\n              <Picker.Item label=\"5-6 PM\" value=\"5-6 PM\" />\r\n              <Picker.Item label=\"6-7 PM\" value=\"6-7 PM\" />\r\n              <Picker.Item label=\"7-8 PM\" value=\"7-8 PM\" />\r\n              <Picker.Item label=\"8-9 PM\" value=\"8-9 PM\" />\r\n              <Picker.Item label=\"9-10 PM\" value=\"9-10 PM\" />\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <MaterialButtonLight\r\n            style={styles.materialButtonLight} click={reg}\r\n          ><Text style={styles.caption}>Proceed to Pay</Text></MaterialButtonLight>\r\n\r\n        </View>\r\n      </View></TouchableWithoutFeedback>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    width: '100%',\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: 'baseline',\r\n    backgroundColor: \"#f0e0df\",\r\n\r\n  },\r\n  header: {\r\n    marginTop: 40,\r\n    width: '100%',\r\n    height: 42,\r\n    backgroundColor: '#ffffff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingBottom: 7,\r\n    borderBottomColor: '#000000',\r\n    borderBottomWidth: .3,\r\n    marginBottom: 10,\r\n  },\r\n  headerTitle: {\r\n    color: 'black',\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n\r\n  },\r\n  address: {\r\n    fontSize: 20,\r\n    paddingTop: 15,\r\n    paddingLeft: 15,\r\n    fontWeight: \"bold\"\r\n  },\r\n  addressinput: {\r\n    width: '90%',\r\n    height: 40,\r\n    fontSize: 18,\r\n    borderBottomColor: '#000000',\r\n    borderBottomWidth: .5,\r\n    marginLeft: 15,\r\n  },\r\n  slots: {\r\n    padding: 5,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    height: 80,\r\n    paddingRight: 15,\r\n  },\r\n  materialButtonLight: {\r\n    height: 40,\r\n    width: 248,\r\n    borderRadius: 20,\r\n    marginTop: -30,\r\n    alignSelf: \"center\"\r\n  },\r\n  ts1: {\r\n    width: 60, height: 65,\r\n    borderColor: '#C4C4C4',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  ts1Press: {\r\n    width: 60, height: 65,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    backgroundColor: '#C4C4C4',\r\n    borderColor: '#C4C4C4',\r\n    justifyContent: 'center',\r\n  },\r\n  ts1text: {\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    color: \"#000000\"\r\n\r\n  },\r\n  slotbutton: {\r\n    width: 60, height: 65,\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#C4C4C4',\r\n    justifyContent: 'center',\r\n    alignItems: 'stretch',\r\n  },\r\n  Selectslot: {\r\n    fontSize: 20,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n    fontWeight: \"bold\",\r\n  },\r\n  Selecttime: {\r\n    fontSize: 20,\r\n    padding: 2,\r\n    fontWeight: \"bold\",\r\n    marginTop: 10,\r\n  },\r\n  timeinput: {\r\n    height: 50,\r\n    fontSize: 15,\r\n    marginLeft: 3,\r\n    borderBottomColor: '#000000',\r\n    borderBottomWidth: .5,\r\n    width: '95%'\r\n  },\r\n  proceed: {\r\n    height: 53,\r\n    width: 316,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    backgroundColor: \"#C4C4C4\",\r\n  },\r\n  proceedtext: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonContainer: {\r\n    width: '100%',\r\n    paddingHorizontal: 2,\r\n    alignItems: 'center',\r\n    paddingTop: 60,\r\n  },\r\n  caption: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport default ScheduleSlot;"]},"metadata":{},"sourceType":"module"}