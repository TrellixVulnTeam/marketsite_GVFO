{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\marketsite\\\\screens\\\\Tellus.js\";\n\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\nimport * as firebase from 'firebase';\nimport auth from '@react-native-firebase/auth';\nimport db from \"../config\";\n\nvar Tellus = function Tellus(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      chargeValid = _useState2[0],\n      setChargeIsValid = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chargeValidationMsg = _useState4[0],\n      setChargeValidationMsg = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      experienceValid = _useState6[0],\n      setExperienceIsValid = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      experienceValidationMsg = _useState8[0],\n      setExperienceValidationMsg = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      charge = _useState10[0],\n      setCharge = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      experience = _useState12[0],\n      setExperience = _useState12[1];\n\n  var CategoryId = route.params.CategoryId;\n\n  var ischargeValid = function ischargeValid(text) {\n    if (text.trim().length < 1) return false;else return true;\n  };\n\n  var isexperienceValid = function isexperienceValid(text) {\n    if (text.trim().length < 1) return false;else return true;\n  };\n\n  var reg = function reg() {\n    if (!charge || !experience) {\n      if (!ischargeValid(charge)) {\n        setChargeIsValid(false);\n        setChargeValidationMsg(\"Please enter a valid Charge\");\n      } else {\n        setChargeValidationMsg(\"\");\n        setChargeIsValid(true);\n      }\n\n      if (!isexperienceValid(experience)) {\n        setExperienceIsValid(false);\n        setExperienceValidationMsg(\"Please enter a valid Experience\");\n      } else {\n        setExperienceValidationMsg(\"\");\n        setExperienceIsValid(true);\n      }\n\n      Alert.alert(\"Check Input added\");\n    } else {\n      try {\n        var email = firebase.auth().currentUser.email;\n        db.collection(\"serviceprovider\").doc(email).update({\n          fixedcharge: charge,\n          experience: experience,\n          category_type: CategoryId\n        });\n        navigation.navigate('NewLead');\n      } catch (error) {\n        var errorMessage = error.message;\n        Alert.alert(errorMessage);\n      }\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.rect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.fixedcharge,\n    placeholder: \"  Fixed Charge\",\n    numberOfLines: 1,\n    onChangeText: function onChangeText(text) {\n      return setCharge(text);\n    },\n    keyboardType: \"decimal-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), !chargeValid && React.createElement(Text, {\n    style: {\n      marginLeft: 50,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 28\n    }\n  }, chargeValidationMsg), React.createElement(TextInput, {\n    style: styles.experienceinput,\n    placeholder: \"  Total Experience in years\",\n    onChangeText: function onChangeText(text) {\n      return setExperience(text);\n    },\n    keyboardType: \"decimal-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), !experienceValid && React.createElement(Text, {\n    style: {\n      marginLeft: 50,\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 32\n    }\n  }, experienceValidationMsg), React.createElement(MaterialButtonLight, {\n    style: styles.materialButtonLight,\n    click: reg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  }, \"Submit\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"rgba(238,238,238,1)\"\n  },\n  materialButtonLight: {\n    height: 40,\n    width: 248,\n    borderRadius: 20,\n    marginTop: 260,\n    alignSelf: \"center\",\n    position: 'absolute'\n  },\n  tellUsAboutYou: {\n    color: \"#121212\",\n    height: 24,\n    width: 334,\n    fontSize: 24,\n    marginTop: 61,\n    marginLeft: 21\n  },\n  rect: {\n    width: 393,\n    height: 662,\n    backgroundColor: \"rgba(255,255,255,1)\",\n    marginTop: 5,\n    position: 'absolute'\n  },\n  fixedcharge: {\n    width: 318,\n    height: 54,\n    backgroundColor: \"rgba(255,251,251,1)\",\n    marginTop: 66,\n    marginLeft: 48\n  },\n  fixedCharge2: {\n    color: \"#121212\",\n    height: 19,\n    width: 132,\n    fontSize: 20,\n    opacity: 0.67,\n    marginTop: 17,\n    marginLeft: 9\n  },\n  experienceinput: {\n    width: 318,\n    height: 54,\n    backgroundColor: \"rgba(255,251,251,1)\",\n    marginTop: 29,\n    marginLeft: 48\n  },\n  experience: {\n    color: \"#121212\",\n    height: 19,\n    width: 132,\n    fontSize: 20,\n    opacity: 0.56,\n    marginTop: 17,\n    marginLeft: 9\n  },\n  button: {\n    width: 306,\n    height: 49,\n    backgroundColor: \"rgba(196,196,196,1)\",\n    borderRadius: 100,\n    marginTop: 49,\n    marginLeft: 35\n  },\n  submit: {\n    color: \"#121212\",\n    height: 19,\n    width: 120,\n    fontSize: 20,\n    textAlign: \"left\",\n    marginTop: 11,\n    marginLeft: 109\n  },\n  caption: {\n    color: \"#FFFFFF\",\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default Tellus;","map":{"version":3,"sources":["D:/marketsite/screens/Tellus.js"],"names":["React","Component","useState","MaterialButtonLight","firebase","auth","db","Tellus","route","navigation","chargeValid","setChargeIsValid","chargeValidationMsg","setChargeValidationMsg","experienceValid","setExperienceIsValid","experienceValidationMsg","setExperienceValidationMsg","charge","setCharge","experience","setExperience","CategoryId","params","ischargeValid","text","trim","length","isexperienceValid","reg","Alert","alert","email","currentUser","collection","doc","update","fixedcharge","category_type","navigate","error","errorMessage","message","Keyboard","dismiss","styles","container","rect","marginLeft","color","experienceinput","materialButtonLight","caption","StyleSheet","create","flex","backgroundColor","height","width","borderRadius","marginTop","alignSelf","position","tellUsAboutYou","fontSize","fixedCharge2","opacity","button","submit","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component,useState } from \"react\";\r\nimport { StyleSheet, View, Text,TouchableWithoutFeedback,Keyboard,TextInput,Alert } from \"react-native\";\r\nimport MaterialButtonLight from \"../components/MaterialButtonLight\";\r\nimport * as firebase from 'firebase';\r\nimport auth from '@react-native-firebase/auth';\r\nimport db from '../config';\r\n//import cache from '../cache'; \r\n\r\nconst Tellus = ({route,navigation}) => {\r\n    \r\n    const [chargeValid,setChargeIsValid] = useState(false);\r\n    const [chargeValidationMsg, setChargeValidationMsg] = useState(\"\");\r\n    const [experienceValid,setExperienceIsValid] = useState(false);\r\n    const [experienceValidationMsg, setExperienceValidationMsg] = useState(\"\");\r\n  \r\n    \r\n  const [charge, setCharge] = useState(\"\");\r\n  const [experience,setExperience] = useState(\"\");\r\n\r\n  const CategoryId = route.params.CategoryId;\r\n  const ischargeValid = text =>{\r\n    if(text.trim().length <1) return false\r\n    else return true\r\n  }  \r\n\r\n  const isexperienceValid = text =>{\r\n    if(text.trim().length <1) \r\n      \r\n         return false\r\n        else return true\r\n      }\r\n\r\n\r\n\r\n       const reg = () =>{\r\n        if(!charge|| !experience  ){\r\n          if(!ischargeValid(charge)){\r\n            setChargeIsValid(false);\r\n            setChargeValidationMsg(\"Please enter a valid Charge\");\r\n        }\r\n          else {\r\n            setChargeValidationMsg(\"\");\r\n            setChargeIsValid(true);      \r\n            \r\n          }\r\n          if(!isexperienceValid(experience)){\r\n            setExperienceIsValid(false);\r\n            setExperienceValidationMsg(\"Please enter a valid Experience\");\r\n        }\r\n          else {\r\n            setExperienceValidationMsg(\"\");\r\n            setExperienceIsValid(true);\r\n            \r\n          }\r\n          Alert.alert(\"Check Input added\")\r\n        }else{\r\n          \r\n\r\n          try {\r\n            var email=firebase.auth().currentUser.email;             \r\n            db.collection(\"serviceprovider\").doc(email).update({\r\n              fixedcharge:charge,\r\n              experience :experience, \r\n              category_type: CategoryId,\r\n          })    \r\n          navigation.navigate('NewLead'); \r\n    \r\n        } catch (error) {\r\n          var errorMessage = error.message;\r\n          Alert.alert(errorMessage);\r\n          }\r\n          \r\n\r\n\r\n\r\n\r\n        }  \r\n        };\r\n  \r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress = { () =>{\r\n      Keyboard.dismiss();\r\n   } } >\r\n     \r\n    <View style={styles.container}>\r\n      <View style={styles.rect}>\r\n        <TextInput style={styles.fixedcharge} placeholder=\"  Fixed Charge\"\r\n            numberOfLines={1}\r\n            onChangeText={text => setCharge(text)}\r\n            keyboardType='decimal-pad'>\r\n          </TextInput>\r\n          {!chargeValid && <Text style={{marginLeft:50,color:'red'}}>{chargeValidationMsg}</Text>}\r\n        <TextInput style={styles.experienceinput}  placeholder=\"  Total Experience in years\"\r\n            onChangeText={text => setExperience(text)}\r\n          keyboardType='decimal-pad'>\r\n            \r\n          </TextInput>\r\n          {!experienceValid && <Text style={{marginLeft:50,color:'red'}}>{experienceValidationMsg}</Text>}\r\n          \r\n        <MaterialButtonLight\r\n          style={styles.materialButtonLight} click={reg}\r\n        ><Text style={styles.caption}>Submit</Text></MaterialButtonLight>\r\n      </View>\r\n    </View></TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(238,238,238,1)\"\r\n  },\r\n  materialButtonLight: {\r\n    height: 40,\r\n    width: 248,\r\n    borderRadius: 20,\r\n    marginTop: 260,\r\n    alignSelf: \"center\",position:'absolute'\r\n  },\r\n  tellUsAboutYou: {\r\n    color: \"#121212\",\r\n    height: 24,\r\n    width: 334,\r\n    fontSize: 24,\r\n    marginTop: 61,\r\n    marginLeft: 21\r\n  },\r\n  rect: {\r\n    width: 393,\r\n    height: 662,\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    marginTop: 5,\r\n    position:'absolute'\r\n\r\n  },\r\n  fixedcharge: {\r\n    width: 318,\r\n    height: 54,\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    marginTop: 66,\r\n    marginLeft: 48,\r\n  },\r\n  fixedCharge2: {\r\n    color: \"#121212\",\r\n    height: 19,\r\n    width: 132,\r\n    fontSize: 20,\r\n    opacity: 0.67,\r\n    marginTop: 17,\r\n    marginLeft: 9\r\n  },\r\n  experienceinput: {\r\n    width: 318,\r\n    height: 54,\r\n    backgroundColor: \"rgba(255,251,251,1)\",\r\n    marginTop: 29,\r\n    marginLeft: 48\r\n  },\r\n  experience: {\r\n    color: \"#121212\",\r\n    height: 19,\r\n    width: 132,\r\n    fontSize: 20,\r\n    opacity: 0.56,\r\n    marginTop: 17,\r\n    marginLeft: 9\r\n  },\r\n  button: {\r\n    width: 306,\r\n    height: 49,\r\n    backgroundColor: \"rgba(196,196,196,1)\",\r\n    borderRadius: 100,\r\n    marginTop: 49,\r\n    marginLeft: 35\r\n  },\r\n  submit: {\r\n    color: \"#121212\",\r\n    height: 19,\r\n    width: 120,\r\n    fontSize: 20,\r\n    textAlign: \"left\",\r\n    marginTop: 11,\r\n    marginLeft: 109\r\n  },caption: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n    fontWeight:'bold',\r\n  }\r\n});\r\n\r\nexport default Tellus;"]},"metadata":{},"sourceType":"module"}